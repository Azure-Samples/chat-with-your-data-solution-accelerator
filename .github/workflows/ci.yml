name: Validate Deployment

on:
  push:
    branches:
      - waf-avm
  schedule:
    - cron: '0 8,20 * * *'  # Runs at 8:00 AM and 8:00 PM GMT
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_PRINCIPAL_ID: ${{ secrets.AZURE_PRINCIPAL_ID }}
      AZURE_PRINCIPAL_NAME: ${{ secrets.AZURE_PRINCIPAL_NAME }}
      AZURE_PRINCIPAL_TYPE: 'ServicePrincipal'

    outputs:
      imageTag: ${{ steps.set-image-tag.outputs.imageTag }}
      web_url: ${{ steps.extract-urls.outputs.web_url }}
      admin_url: ${{ steps.extract-urls.outputs.admin_url }}
      DEPLOYMENT_SUCCESS: ${{ steps.final-status.outputs.DEPLOYMENT_SUCCESS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install AZD
        run: |
          set -e
          echo "Fetching deployment output..."
          # Install azd (Azure Developer CLI) - required by process_sample_data.sh
          curl -fsSL https://aka.ms/install-azd.sh | bash

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
                python-version: '3.11'

      - name: Install Python dependencies
        run: |
                pip install psycopg2-binary python-dotenv azure-identity

      - name: Populate PostgreSQL Database
        run: |
          python - <<EOF
          import os
          import psycopg2
          from azure.identity import DefaultAzureCredential

          tenant_id = os.environ["AZURE_TENANT_ID"]
          client_id = os.environ["AZURE_CLIENT_ID"]
          name = os.environ["AZURE_PRINCIPAL_NAME"]
          pg_host = "psql-pslc93v4kjv-postgres.postgres.database.azure.com"

          # Acquire Azure AD access token for PostgreSQL
          credential = DefaultAzureCredential(client_id=client_id)
          token = credential.get_token("https://ossrdbms-aad.database.windows.net/.default").token

          db_params = {
              "user": name,   # Use service principal name
              "password": token,   # Use AAD token instead of password
              "host": pg_host,
              "port": "5432",
              "dbname": "postgres",
              "sslmode": "require"
          }
          csv_file = "exported_data_vector_score.csv"
          target_table = "vector_store"
          try:
              with psycopg2.connect(**db_params) as conn:
                  with conn.cursor() as cur:
                      with open(csv_file, "r", encoding="utf-8") as f:
                          next(f)  # Skip header
                          cur.copy_expert(f"COPY {target_table} FROM STDIN WITH CSV", f)
                  conn.commit()
                  print(f"✅ Imported data from '{csv_file}' into table '{target_table}'.")
          except Exception as e:
              print(f"❌ Error during import: {e}")
          EOF
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_PRINCIPAL_NAME: ${{ secrets.AZURE_PRINCIPAL_NAME }}
