name: Daily Broken Link Check

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  broken-link-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Lychee link checker
        id: lychee
        uses: lycheeverse/lychee-action@v2.4.1
        with:
          args: >
            --verbose
            --exclude-mail
            --no-progress
            --exclude ^https?://
            '**/*.md'
          output: lychee/out.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if output file is empty
        id: check_file
        run: |
          if [ -s lychee/out.md ]; then
            echo "has_issues=true" >> $GITHUB_ENV
          else
            echo "has_issues=false" >> $GITHUB_ENV
          fi
    
      - name: Create or update GitHub Issue
        if: env.has_issues == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="ðŸš¨ Broken Links Detected"
          ISSUE_BODY="$(cat lychee/out.md)"
          echo "Searching for existing issue..."
          gh issue list --state open --search "$ISSUE_TITLE" --json number,title > issues.json
          cat issues.json
          EXISTING_ISSUE=$(jq -r '.[] | select(.title == "'"$ISSUE_TITLE"'") | .number' issues.json)
      
          if [ -n "$EXISTING_ISSUE" ]; then
            echo "Updating existing issue #$EXISTING_ISSUE"
            gh issue edit "$EXISTING_ISSUE" --body "$ISSUE_BODY"
          else
            echo "Creating new issue"
            gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY" --label "bug,links"
          fi
