{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "16424067960359050937"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 20,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "resourceToken": {
      "type": "string",
      "defaultValue": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[format('hosting-plan-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of App Service plan"
      }
    },
    "hostingPlanSku": {
      "type": "string",
      "defaultValue": "B3",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "The pricing tier for the App Service plan"
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium",
        "PremiumV2",
        "PremiumV3"
      ],
      "metadata": {
        "description": "The sku tier for the App Service plan"
      }
    },
    "websiteName": {
      "type": "string",
      "defaultValue": "[format('web-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Web App"
      }
    },
    "adminWebsiteName": {
      "type": "string",
      "defaultValue": "[format('{0}-admin', parameters('websiteName'))]",
      "metadata": {
        "description": "Name of Admin Web App"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[format('appinsights-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Application Insights"
      }
    },
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "[format('workbook-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of the Workbook"
      }
    },
    "azureSearchUseSemanticSearch": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Use semantic search"
      }
    },
    "azureSearchSemanticSearchConfig": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Semantic search config"
      }
    },
    "azureSearchIndexIsPrechunked": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Is the index prechunked"
      }
    },
    "azureSearchTopK": {
      "type": "string",
      "defaultValue": "5",
      "metadata": {
        "description": "Top K results"
      }
    },
    "azureSearchEnableInDomain": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "Enable in domain"
      }
    },
    "azureSearchContentColumns": {
      "type": "string",
      "defaultValue": "content",
      "metadata": {
        "description": "Content columns"
      }
    },
    "azureSearchFilenameColumn": {
      "type": "string",
      "defaultValue": "filename",
      "metadata": {
        "description": "Filename column"
      }
    },
    "azureSearchFilter": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Search filter"
      }
    },
    "azureSearchTitleColumn": {
      "type": "string",
      "defaultValue": "title",
      "metadata": {
        "description": "Title column"
      }
    },
    "azureSearchUrlColumn": {
      "type": "string",
      "defaultValue": "url",
      "metadata": {
        "description": "Url column"
      }
    },
    "azureSearchUseIntegratedVectorization": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        false
      ],
      "metadata": {
        "description": "Use Azure Search Integrated Vectorization (Not yet implemented)"
      }
    },
    "azureOpenAIResourceName": {
      "type": "string",
      "defaultValue": "[format('openai-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Azure OpenAI Resource"
      }
    },
    "azureOpenAISkuName": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "Name of Azure OpenAI Resource SKU"
      }
    },
    "azureOpenAIModel": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "Azure OpenAI Model Deployment Name"
      }
    },
    "azureOpenAIModelName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo",
      "metadata": {
        "description": "Azure OpenAI Model Name"
      }
    },
    "azureOpenAIModelVersion": {
      "type": "string",
      "defaultValue": "0613"
    },
    "orchestrationStrategy": {
      "type": "string",
      "defaultValue": "openai_function",
      "allowedValues": [
        "openai_function",
        "langchain"
      ],
      "metadata": {
        "description": "Orchestration strategy: openai_function or langchain str. If you use a old version of turbo (0301), plese select langchain"
      }
    },
    "azureOpenAITemperature": {
      "type": "string",
      "defaultValue": "0",
      "metadata": {
        "description": "Azure OpenAI Temperature"
      }
    },
    "azureOpenAITopP": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "Azure OpenAI Top P"
      }
    },
    "azureOpenAIMaxTokens": {
      "type": "string",
      "defaultValue": "1000",
      "metadata": {
        "description": "Azure OpenAI Max Tokens"
      }
    },
    "azureOpenAIStopSequence": {
      "type": "string",
      "defaultValue": "\n",
      "metadata": {
        "description": "Azure OpenAI Stop Sequence"
      }
    },
    "azureOpenAISystemMessage": {
      "type": "string",
      "defaultValue": "You are an AI assistant that helps people find information.",
      "metadata": {
        "description": "Azure OpenAI System Message"
      }
    },
    "azureOpenAIApiVersion": {
      "type": "string",
      "defaultValue": "2024-02-01",
      "metadata": {
        "description": "Azure OpenAI Api Version"
      }
    },
    "azureOpenAIStream": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "Whether or not to stream responses from Azure OpenAI"
      }
    },
    "azureOpenAIEmbeddingModel": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "metadata": {
        "description": "Azure OpenAI Embedding Model Deployment Name"
      }
    },
    "azureOpenAIEmbeddingModelName": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "metadata": {
        "description": "Azure OpenAI Embedding Model Name"
      }
    },
    "azureAISearchName": {
      "type": "string",
      "defaultValue": "[format('search-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Azure AI Search Resource"
      }
    },
    "azureSearchSku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "free",
        "basic",
        "standard",
        "standard2",
        "standard3"
      ],
      "metadata": {
        "description": "The SKU of the search service you want to create. E.g. free or standard"
      }
    },
    "azureSearchIndex": {
      "type": "string",
      "defaultValue": "[format('index-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Azure AI Search Index"
      }
    },
    "azureSearchConversationLogIndex": {
      "type": "string",
      "defaultValue": "conversations",
      "metadata": {
        "description": "Azure AI Search Conversation Log Index"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('str{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Storage Account"
      }
    },
    "functionName": {
      "type": "string",
      "defaultValue": "[format('backend-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Name of Function App for Batch document processing"
      }
    },
    "formRecognizerName": {
      "type": "string",
      "defaultValue": "[format('formrecog-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Azure Form Recognizer Name"
      }
    },
    "contentSafetyName": {
      "type": "string",
      "defaultValue": "[format('contentsafety-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Azure Content Safety Name"
      }
    },
    "speechServiceName": {
      "type": "string",
      "defaultValue": "[format('speech-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Azure Speech Service Name"
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": "[format('la-{0}', parameters('resourceToken'))]",
      "metadata": {
        "description": "Log Analytics Name"
      }
    },
    "newGuidString": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "searchTag": {
      "type": "string",
      "defaultValue": "chatwithyourdata-sa"
    },
    "useKeyVault": {
      "type": "bool",
      "defaultValue": "[if(equals(parameters('authType'), 'rbac'), false(), true())]",
      "metadata": {
        "description": "Whether to use Key Vault to store secrets (best when using keys). If using RBAC, then please set this to false."
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "authType": {
      "type": "string",
      "defaultValue": "keys",
      "allowedValues": [
        "rbac",
        "keys"
      ],
      "metadata": {
        "description": "Whether the Azure services communicate with each other using RBAC or keys. RBAC is recommended, however some users may not have sufficient permissions to assign roles."
      }
    },
    "hostingModel": {
      "type": "string",
      "defaultValue": "container",
      "allowedValues": [
        "code",
        "container"
      ],
      "metadata": {
        "description": "Hosting model for the web apps. Containers are prebuilt and can be deployed faster, but code allows for more customization."
      }
    },
    "logLevel": {
      "type": "string",
      "defaultValue": "INFO",
      "allowedValues": [
        "CRITICAL",
        "ERROR",
        "WARN",
        "INFO",
        "DEBUG"
      ]
    }
  },
  "variables": {
    "blobContainerName": "documents",
    "queueName": "doc-processing",
    "clientKey": "[format('{0}{1}', uniqueString(guid(subscription().id, deployment().name)), parameters('newGuidString'))]",
    "eventGridSystemTopicName": "doc-processing",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "rgName": "[format('rg-{0}', parameters('environmentName'))]",
    "keyVaultName": "[format('kv-{0}', parameters('resourceToken'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[variables('rgName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "condition": "[or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "18407114162280426775"
            },
            "description": "Creates an Azure Key Vault."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
              }
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('azureOpenAIResourceName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('azureOpenAIResourceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "sku": {
            "value": {
              "name": "[parameters('azureOpenAISkuName')]"
            }
          },
          "managedIdentity": {
            "value": "[equals(parameters('authType'), 'rbac')]"
          },
          "deployments": {
            "value": [
              {
                "name": "[parameters('azureOpenAIModel')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('azureOpenAIModelName')]",
                  "version": "[parameters('azureOpenAIModelVersion')]"
                },
                "sku": {
                  "name": "Standard",
                  "capacity": 30
                }
              },
              {
                "name": "[parameters('azureOpenAIEmbeddingModel')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('azureOpenAIEmbeddingModelName')]",
                  "version": "2"
                },
                "capacity": 30
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "10580067567296932781"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "managedIdentity": {
              "type": "bool",
              "defaultValue": false
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]",
              "identity": {
                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
              }
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId, '')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('authType'), 'rbac')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-index-role-openai",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "1407120a-92aa-4202-b7e9-c0e197c71c8f"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2390256577307700589"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('authType'), 'rbac')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-service-role-openai",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "roleDefinitionId": {
            "value": "7ca78c08-252a-4471-8644-bb5ff32d4ba0"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2390256577307700589"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('speechServiceName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('speechServiceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": {
              "name": "S0"
            }
          },
          "kind": {
            "value": "SpeechServices"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "10580067567296932781"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "managedIdentity": {
              "type": "bool",
              "defaultValue": false
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]",
              "identity": {
                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
              }
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId, '')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[parameters('useKeyVault')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storekeys",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[parameters('speechServiceName')]"
          },
          "rgName": {
            "value": "[variables('rgName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "12714039581294574286"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "rgName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": "AZURE-STORAGE-ACCOUNT-KEY"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": "AZURE-OPENAI-API-KEY"
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": "AZURE-SEARCH-KEY"
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": "AZURE-FORM-RECOGNIZER-KEY"
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": "AZURE-CONTENT-SAFETY-KEY"
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": "AZURE-SPEECH-KEY"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('storageAccountKeyName'))]",
              "properties": {
                "value": "[listKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('openAIKeyName'))]",
              "properties": {
                "value": "[listKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('searchKeyName'))]",
              "properties": {
                "value": "[listAdminKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('formRecognizerKeyName'))]",
              "properties": {
                "value": "[listKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('contentSafetyKeyName'))]",
              "properties": {
                "value": "[listKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('speechKeyName'))]",
              "properties": {
                "value": "[listKeys(resourceId(subscription().subscriptionId, parameters('rgName'), 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1]"
              }
            }
          ],
          "outputs": {
            "CONTENT_SAFETY_KEY_NAME": {
              "type": "string",
              "value": "[parameters('contentSafetyKeyName')]"
            },
            "FORM_RECOGNIZER_KEY_NAME": {
              "type": "string",
              "value": "[parameters('formRecognizerKeyName')]"
            },
            "SEARCH_KEY_NAME": {
              "type": "string",
              "value": "[parameters('searchKeyName')]"
            },
            "OPENAI_KEY_NAME": {
              "type": "string",
              "value": "[parameters('openAIKeyName')]"
            },
            "STORAGE_ACCOUNT_KEY_NAME": {
              "type": "string",
              "value": "[parameters('storageAccountKeyName')]"
            },
            "SPEECH_KEY_NAME": {
              "type": "string",
              "value": "[parameters('speechKeyName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('azureAISearchName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('azureAISearchName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "deployment": "[parameters('searchTag')]"
            }
          },
          "sku": {
            "value": {
              "name": "[parameters('azureSearchSku')]"
            }
          },
          "authOptions": {
            "value": {
              "aadOrApiKey": {
                "aadAuthFailureMode": "http403"
              }
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "15593973660167090308"
            },
            "description": "Creates an Azure AI Search instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "standard"
              }
            },
            "authOptions": {
              "type": "object",
              "defaultValue": {}
            },
            "disableLocalAuth": {
              "type": "bool",
              "defaultValue": false
            },
            "disabledDataExfiltrationOptions": {
              "type": "array",
              "defaultValue": []
            },
            "encryptionWithCmk": {
              "type": "object",
              "defaultValue": {
                "enforcement": "Unspecified"
              }
            },
            "hostingMode": {
              "type": "string",
              "defaultValue": "default",
              "allowedValues": [
                "default",
                "highDensity"
              ]
            },
            "networkRuleSet": {
              "type": "object",
              "defaultValue": {
                "bypass": "None",
                "ipRules": []
              }
            },
            "partitionCount": {
              "type": "int",
              "defaultValue": 1
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "enabled",
              "allowedValues": [
                "enabled",
                "disabled"
              ]
            },
            "replicaCount": {
              "type": "int",
              "defaultValue": 1
            },
            "semanticSearch": {
              "type": "string",
              "defaultValue": "disabled",
              "allowedValues": [
                "disabled",
                "free",
                "standard"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2021-04-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "authOptions": "[parameters('authOptions')]",
                "disableLocalAuth": "[parameters('disableLocalAuth')]",
                "disabledDataExfiltrationOptions": "[parameters('disabledDataExfiltrationOptions')]",
                "encryptionWithCmk": "[parameters('encryptionWithCmk')]",
                "hostingMode": "[parameters('hostingMode')]",
                "networkRuleSet": "[parameters('networkRuleSet')]",
                "partitionCount": "[parameters('partitionCount')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "replicaCount": "[parameters('replicaCount')]",
                "semanticSearch": "[parameters('semanticSearch')]"
              },
              "sku": "[parameters('sku')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
            },
            "endpoint": {
              "type": "string",
              "value": "[format('https://{0}.search.windows.net/', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('hostingPlanName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('hostingPlanName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": {
              "name": "[parameters('hostingPlanSku')]",
              "tier": "[parameters('skuTier')]"
            }
          },
          "reserved": {
            "value": true
          },
          "tags": {
            "value": {
              "Automation": "Ignore"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "6728315099548749563"
            },
            "description": "Creates an Azure App Service plan."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "kind": {
              "type": "string",
              "defaultValue": ""
            },
            "reserved": {
              "type": "bool",
              "defaultValue": true
            },
            "sku": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "reserved": "[parameters('reserved')]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('hostingModel'), 'code')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('websiteName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('websiteName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('azd-service-name', 'web'))]"
          },
          "runtimeName": {
            "value": "python"
          },
          "runtimeVersion": {
            "value": "3.11"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName')), '2022-09-01').outputs.name.value]"
          },
          "openAIKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value), createObject('value', ''))]",
          "storageAccountKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value), createObject('value', ''))]",
          "formRecognizerKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value), createObject('value', ''))]",
          "searchKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value), createObject('value', ''))]",
          "contentSafetyKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value), createObject('value', ''))]",
          "speechKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value), createObject('value', ''))]",
          "useKeyVault": {
            "value": "[parameters('useKeyVault')]"
          },
          "keyVaultName": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value), createObject('value', ''))]",
          "authType": {
            "value": "[parameters('authType')]"
          },
          "appSettings": {
            "value": {
              "AZURE_BLOB_ACCOUNT_NAME": "[parameters('storageAccountName')]",
              "AZURE_BLOB_CONTAINER_NAME": "[variables('blobContainerName')]",
              "AZURE_CONTENT_SAFETY_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_FORM_RECOGNIZER_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_OPENAI_RESOURCE": "[parameters('azureOpenAIResourceName')]",
              "AZURE_OPENAI_MODEL": "[parameters('azureOpenAIModel')]",
              "AZURE_OPENAI_MODEL_NAME": "[parameters('azureOpenAIModelName')]",
              "AZURE_OPENAI_TEMPERATURE": "[parameters('azureOpenAITemperature')]",
              "AZURE_OPENAI_TOP_P": "[parameters('azureOpenAITopP')]",
              "AZURE_OPENAI_MAX_TOKENS": "[parameters('azureOpenAIMaxTokens')]",
              "AZURE_OPENAI_STOP_SEQUENCE": "[parameters('azureOpenAIStopSequence')]",
              "AZURE_OPENAI_SYSTEM_MESSAGE": "[parameters('azureOpenAISystemMessage')]",
              "AZURE_OPENAI_API_VERSION": "[parameters('azureOpenAIApiVersion')]",
              "AZURE_OPENAI_STREAM": "[parameters('azureOpenAIStream')]",
              "AZURE_OPENAI_EMBEDDING_MODEL": "[parameters('azureOpenAIEmbeddingModel')]",
              "AZURE_SEARCH_USE_SEMANTIC_SEARCH": "[parameters('azureSearchUseSemanticSearch')]",
              "AZURE_SEARCH_SERVICE": "[format('https://{0}.search.windows.net', parameters('azureAISearchName'))]",
              "AZURE_SEARCH_INDEX": "[parameters('azureSearchIndex')]",
              "AZURE_SEARCH_CONVERSATIONS_LOG_INDEX": "[parameters('azureSearchConversationLogIndex')]",
              "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": "[parameters('azureSearchSemanticSearchConfig')]",
              "AZURE_SEARCH_INDEX_IS_PRECHUNKED": "[parameters('azureSearchIndexIsPrechunked')]",
              "AZURE_SEARCH_TOP_K": "[parameters('azureSearchTopK')]",
              "AZURE_SEARCH_ENABLE_IN_DOMAIN": "[parameters('azureSearchEnableInDomain')]",
              "AZURE_SEARCH_CONTENT_COLUMNS": "[parameters('azureSearchContentColumns')]",
              "AZURE_SEARCH_FILENAME_COLUMN": "[parameters('azureSearchFilenameColumn')]",
              "AZURE_SEARCH_FILTER": "[parameters('azureSearchFilter')]",
              "AZURE_SEARCH_TITLE_COLUMN": "[parameters('azureSearchTitleColumn')]",
              "AZURE_SEARCH_URL_COLUMN": "[parameters('azureSearchUrlColumn')]",
              "AZURE_SPEECH_SERVICE_NAME": "[parameters('speechServiceName')]",
              "AZURE_SPEECH_SERVICE_REGION": "[parameters('location')]",
              "ORCHESTRATION_STRATEGY": "[parameters('orchestrationStrategy')]",
              "LOGLEVEL": "[parameters('logLevel')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2617364981024851878"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "appCommandLine": {
              "type": "string",
              "defaultValue": ""
            },
            "appServicePlanId": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "appSettings": {
              "type": "secureObject",
              "defaultValue": {}
            },
            "useKeyVault": {
              "type": "bool"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "authType": {
              "type": "string"
            },
            "dockerFullImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "useDocker": {
              "type": "bool",
              "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-app-module', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "allowedOrigins": {
                    "value": "[parameters('allowedOrigins')]"
                  },
                  "appCommandLine": "[if(parameters('useDocker'), createObject('value', ''), createObject('value', parameters('appCommandLine')))]",
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('AZURE_AUTH_TYPE', parameters('authType'), 'USE_KEY_VAULT', if(parameters('useKeyVault'), parameters('useKeyVault'), ''), 'AZURE_OPENAI_API_KEY', if(parameters('useKeyVault'), parameters('openAIKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1), 'AZURE_SEARCH_KEY', if(parameters('useKeyVault'), parameters('searchKeyName'), listAdminKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey), 'AZURE_BLOB_ACCOUNT_KEY', if(parameters('useKeyVault'), parameters('storageAccountKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value), 'AZURE_FORM_RECOGNIZER_KEY', if(parameters('useKeyVault'), parameters('formRecognizerKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1), 'AZURE_CONTENT_SAFETY_KEY', if(parameters('useKeyVault'), parameters('contentSafetyKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1), 'AZURE_SPEECH_SERVICE_KEY', if(parameters('useKeyVault'), parameters('speechKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1)))]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "dockerFullImageName": {
                    "value": "[parameters('dockerFullImageName')]"
                  },
                  "scmDoBuildDuringDeployment": "[if(parameters('useDocker'), createObject('value', false()), createObject('value', true()))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "5404929427041984254"
                    },
                    "description": "Creates an Azure App Service in an existing Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "dockerFullImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "useDocker": {
                      "type": "bool",
                      "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "linuxFxVersion": {
                      "type": "string",
                      "defaultValue": "[if(parameters('useDocker'), format('DOCKER|{0}', parameters('dockerFullImageName')), parameters('runtimeNameAndVersion'))]"
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "ftpsState": {
                      "type": "string",
                      "defaultValue": "FtpsOnly"
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "siteConfig": {
                          "linuxFxVersion": "[parameters('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "ftpsState": "[parameters('ftpsState')]",
                          "minTlsVersion": "1.2",
                          "appCommandLine": "[parameters('appCommandLine')]",
                          "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                          "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                          "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                          "healthCheckPath": "[parameters('healthCheckPath')]",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                          }
                        },
                        "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                        "httpsOnly": true
                      },
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                      "properties": {
                        "applicationLogs": {
                          "fileSystem": {
                            "level": "Verbose"
                          }
                        },
                        "detailedErrorMessages": {
                          "enabled": true
                        },
                        "failedRequestsTracing": {
                          "enabled": true
                        },
                        "httpLogs": {
                          "fileSystem": {
                            "enabled": true,
                            "retentionInDays": 1,
                            "retentionInMb": 35
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-appSettings', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-appSettings', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('APPINSIGHTS_ENABLED', string(not(empty(parameters('applicationInsightsName')))), 'SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "15901877046756643519"
                            },
                            "description": "Updates app settings for an Azure App Service."
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the app service resource within the current resource group scope"
                              }
                            },
                            "appSettings": {
                              "type": "secureObject",
                              "metadata": {
                                "description": "The app settings to be applied to the app service"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                              "properties": "[parameters('appSettings')]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-web",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-web-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search-role-web",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('useKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "web-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "7922086847377910894"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "FRONTEND_API_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "FRONTEND_API_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "FRONTEND_API_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys')]"
      ]
    },
    {
      "condition": "[equals(parameters('hostingModel'), 'container')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-docker', parameters('websiteName'))]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-docker', parameters('websiteName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('azd-service-name', 'web-docker'))]"
          },
          "dockerFullImageName": {
            "value": "fruoccopublic.azurecr.io/rag-webapp"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName')), '2022-09-01').outputs.name.value]"
          },
          "openAIKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value), createObject('value', ''))]",
          "storageAccountKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value), createObject('value', ''))]",
          "formRecognizerKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value), createObject('value', ''))]",
          "searchKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value), createObject('value', ''))]",
          "contentSafetyKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value), createObject('value', ''))]",
          "speechKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value), createObject('value', ''))]",
          "useKeyVault": {
            "value": "[parameters('useKeyVault')]"
          },
          "keyVaultName": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value), createObject('value', ''))]",
          "authType": {
            "value": "[parameters('authType')]"
          },
          "appSettings": {
            "value": {
              "AZURE_BLOB_ACCOUNT_NAME": "[parameters('storageAccountName')]",
              "AZURE_BLOB_CONTAINER_NAME": "[variables('blobContainerName')]",
              "AZURE_CONTENT_SAFETY_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_FORM_RECOGNIZER_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_OPENAI_RESOURCE": "[parameters('azureOpenAIResourceName')]",
              "AZURE_OPENAI_MODEL": "[parameters('azureOpenAIModel')]",
              "AZURE_OPENAI_MODEL_NAME": "[parameters('azureOpenAIModelName')]",
              "AZURE_OPENAI_TEMPERATURE": "[parameters('azureOpenAITemperature')]",
              "AZURE_OPENAI_TOP_P": "[parameters('azureOpenAITopP')]",
              "AZURE_OPENAI_MAX_TOKENS": "[parameters('azureOpenAIMaxTokens')]",
              "AZURE_OPENAI_STOP_SEQUENCE": "[parameters('azureOpenAIStopSequence')]",
              "AZURE_OPENAI_SYSTEM_MESSAGE": "[parameters('azureOpenAISystemMessage')]",
              "AZURE_OPENAI_API_VERSION": "[parameters('azureOpenAIApiVersion')]",
              "AZURE_OPENAI_STREAM": "[parameters('azureOpenAIStream')]",
              "AZURE_OPENAI_EMBEDDING_MODEL": "[parameters('azureOpenAIEmbeddingModel')]",
              "AZURE_SEARCH_USE_SEMANTIC_SEARCH": "[parameters('azureSearchUseSemanticSearch')]",
              "AZURE_SEARCH_SERVICE": "[format('https://{0}.search.windows.net', parameters('azureAISearchName'))]",
              "AZURE_SEARCH_INDEX": "[parameters('azureSearchIndex')]",
              "AZURE_SEARCH_CONVERSATIONS_LOG_INDEX": "[parameters('azureSearchConversationLogIndex')]",
              "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": "[parameters('azureSearchSemanticSearchConfig')]",
              "AZURE_SEARCH_INDEX_IS_PRECHUNKED": "[parameters('azureSearchIndexIsPrechunked')]",
              "AZURE_SEARCH_TOP_K": "[parameters('azureSearchTopK')]",
              "AZURE_SEARCH_ENABLE_IN_DOMAIN": "[parameters('azureSearchEnableInDomain')]",
              "AZURE_SEARCH_CONTENT_COLUMNS": "[parameters('azureSearchContentColumns')]",
              "AZURE_SEARCH_FILENAME_COLUMN": "[parameters('azureSearchFilenameColumn')]",
              "AZURE_SEARCH_FILTER": "[parameters('azureSearchFilter')]",
              "AZURE_SEARCH_TITLE_COLUMN": "[parameters('azureSearchTitleColumn')]",
              "AZURE_SEARCH_URL_COLUMN": "[parameters('azureSearchUrlColumn')]",
              "AZURE_SPEECH_SERVICE_NAME": "[parameters('speechServiceName')]",
              "AZURE_SPEECH_SERVICE_REGION": "[parameters('location')]",
              "ORCHESTRATION_STRATEGY": "[parameters('orchestrationStrategy')]",
              "LOGLEVEL": "[parameters('logLevel')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2617364981024851878"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "appCommandLine": {
              "type": "string",
              "defaultValue": ""
            },
            "appServicePlanId": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "appSettings": {
              "type": "secureObject",
              "defaultValue": {}
            },
            "useKeyVault": {
              "type": "bool"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "authType": {
              "type": "string"
            },
            "dockerFullImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "useDocker": {
              "type": "bool",
              "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-app-module', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "allowedOrigins": {
                    "value": "[parameters('allowedOrigins')]"
                  },
                  "appCommandLine": "[if(parameters('useDocker'), createObject('value', ''), createObject('value', parameters('appCommandLine')))]",
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('AZURE_AUTH_TYPE', parameters('authType'), 'USE_KEY_VAULT', if(parameters('useKeyVault'), parameters('useKeyVault'), ''), 'AZURE_OPENAI_API_KEY', if(parameters('useKeyVault'), parameters('openAIKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1), 'AZURE_SEARCH_KEY', if(parameters('useKeyVault'), parameters('searchKeyName'), listAdminKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey), 'AZURE_BLOB_ACCOUNT_KEY', if(parameters('useKeyVault'), parameters('storageAccountKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value), 'AZURE_FORM_RECOGNIZER_KEY', if(parameters('useKeyVault'), parameters('formRecognizerKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1), 'AZURE_CONTENT_SAFETY_KEY', if(parameters('useKeyVault'), parameters('contentSafetyKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1), 'AZURE_SPEECH_SERVICE_KEY', if(parameters('useKeyVault'), parameters('speechKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1)))]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "dockerFullImageName": {
                    "value": "[parameters('dockerFullImageName')]"
                  },
                  "scmDoBuildDuringDeployment": "[if(parameters('useDocker'), createObject('value', false()), createObject('value', true()))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "5404929427041984254"
                    },
                    "description": "Creates an Azure App Service in an existing Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "dockerFullImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "useDocker": {
                      "type": "bool",
                      "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "linuxFxVersion": {
                      "type": "string",
                      "defaultValue": "[if(parameters('useDocker'), format('DOCKER|{0}', parameters('dockerFullImageName')), parameters('runtimeNameAndVersion'))]"
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "ftpsState": {
                      "type": "string",
                      "defaultValue": "FtpsOnly"
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "siteConfig": {
                          "linuxFxVersion": "[parameters('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "ftpsState": "[parameters('ftpsState')]",
                          "minTlsVersion": "1.2",
                          "appCommandLine": "[parameters('appCommandLine')]",
                          "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                          "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                          "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                          "healthCheckPath": "[parameters('healthCheckPath')]",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                          }
                        },
                        "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                        "httpsOnly": true
                      },
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                      "properties": {
                        "applicationLogs": {
                          "fileSystem": {
                            "level": "Verbose"
                          }
                        },
                        "detailedErrorMessages": {
                          "enabled": true
                        },
                        "failedRequestsTracing": {
                          "enabled": true
                        },
                        "httpLogs": {
                          "fileSystem": {
                            "enabled": true,
                            "retentionInDays": 1,
                            "retentionInMb": 35
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-appSettings', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-appSettings', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('APPINSIGHTS_ENABLED', string(not(empty(parameters('applicationInsightsName')))), 'SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "15901877046756643519"
                            },
                            "description": "Updates app settings for an Azure App Service."
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the app service resource within the current resource group scope"
                              }
                            },
                            "appSettings": {
                              "type": "secureObject",
                              "metadata": {
                                "description": "The app settings to be applied to the app service"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                              "properties": "[parameters('appSettings')]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-web",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-web-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search-role-web",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('useKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "web-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "7922086847377910894"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "FRONTEND_API_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "FRONTEND_API_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "FRONTEND_API_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys')]"
      ]
    },
    {
      "condition": "[equals(parameters('hostingModel'), 'code')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('adminWebsiteName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('adminWebsiteName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('azd-service-name', 'adminweb'))]"
          },
          "runtimeName": {
            "value": "python"
          },
          "runtimeVersion": {
            "value": "3.11"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName')), '2022-09-01').outputs.name.value]"
          },
          "openAIKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value), createObject('value', ''))]",
          "storageAccountKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value), createObject('value', ''))]",
          "formRecognizerKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value), createObject('value', ''))]",
          "searchKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value), createObject('value', ''))]",
          "contentSafetyKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value), createObject('value', ''))]",
          "speechKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value), createObject('value', ''))]",
          "useKeyVault": {
            "value": "[parameters('useKeyVault')]"
          },
          "keyVaultName": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value), createObject('value', ''))]",
          "authType": {
            "value": "[parameters('authType')]"
          },
          "appSettings": {
            "value": {
              "AZURE_BLOB_ACCOUNT_NAME": "[parameters('storageAccountName')]",
              "AZURE_BLOB_CONTAINER_NAME": "[variables('blobContainerName')]",
              "AZURE_CONTENT_SAFETY_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_FORM_RECOGNIZER_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_OPENAI_RESOURCE": "[parameters('azureOpenAIResourceName')]",
              "AZURE_OPENAI_MODEL": "[parameters('azureOpenAIModel')]",
              "AZURE_OPENAI_MODEL_NAME": "[parameters('azureOpenAIModelName')]",
              "AZURE_OPENAI_TEMPERATURE": "[parameters('azureOpenAITemperature')]",
              "AZURE_OPENAI_TOP_P": "[parameters('azureOpenAITopP')]",
              "AZURE_OPENAI_MAX_TOKENS": "[parameters('azureOpenAIMaxTokens')]",
              "AZURE_OPENAI_STOP_SEQUENCE": "[parameters('azureOpenAIStopSequence')]",
              "AZURE_OPENAI_SYSTEM_MESSAGE": "[parameters('azureOpenAISystemMessage')]",
              "AZURE_OPENAI_API_VERSION": "[parameters('azureOpenAIApiVersion')]",
              "AZURE_OPENAI_STREAM": "[parameters('azureOpenAIStream')]",
              "AZURE_OPENAI_EMBEDDING_MODEL": "[parameters('azureOpenAIEmbeddingModel')]",
              "AZURE_SEARCH_SERVICE": "[format('https://{0}.search.windows.net', parameters('azureAISearchName'))]",
              "AZURE_SEARCH_INDEX": "[parameters('azureSearchIndex')]",
              "AZURE_SEARCH_USE_SEMANTIC_SEARCH": "[parameters('azureSearchUseSemanticSearch')]",
              "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": "[parameters('azureSearchSemanticSearchConfig')]",
              "AZURE_SEARCH_INDEX_IS_PRECHUNKED": "[parameters('azureSearchIndexIsPrechunked')]",
              "AZURE_SEARCH_TOP_K": "[parameters('azureSearchTopK')]",
              "AZURE_SEARCH_ENABLE_IN_DOMAIN": "[parameters('azureSearchEnableInDomain')]",
              "AZURE_SEARCH_CONTENT_COLUMNS": "[parameters('azureSearchContentColumns')]",
              "AZURE_SEARCH_FILENAME_COLUMN": "[parameters('azureSearchFilenameColumn')]",
              "AZURE_SEARCH_FILTER": "[parameters('azureSearchFilter')]",
              "AZURE_SEARCH_TITLE_COLUMN": "[parameters('azureSearchTitleColumn')]",
              "AZURE_SEARCH_URL_COLUMN": "[parameters('azureSearchUrlColumn')]",
              "BACKEND_URL": "[format('https://{0}.azurewebsites.net', parameters('functionName'))]",
              "DOCUMENT_PROCESSING_QUEUE_NAME": "[variables('queueName')]",
              "FUNCTION_KEY": "[variables('clientKey')]",
              "ORCHESTRATION_STRATEGY": "[parameters('orchestrationStrategy')]",
              "LOGLEVEL": "[parameters('logLevel')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "8190548878142406566"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "appServicePlanId": {
              "type": "string"
            },
            "appCommandLine": {
              "type": "string",
              "defaultValue": "python -m streamlit run Admin.py --server.port 8000 --server.address 0.0.0.0 --server.enableXsrfProtection false"
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "appSettings": {
              "type": "secureObject",
              "defaultValue": {}
            },
            "useKeyVault": {
              "type": "bool"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "authType": {
              "type": "string"
            },
            "dockerFullImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "useDocker": {
              "type": "bool",
              "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-app-module', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "allowedOrigins": {
                    "value": "[parameters('allowedOrigins')]"
                  },
                  "appCommandLine": "[if(parameters('useDocker'), createObject('value', ''), createObject('value', parameters('appCommandLine')))]",
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "dockerFullImageName": {
                    "value": "[parameters('dockerFullImageName')]"
                  },
                  "scmDoBuildDuringDeployment": "[if(parameters('useDocker'), createObject('value', false()), createObject('value', true()))]",
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('AZURE_AUTH_TYPE', parameters('authType'), 'USE_KEY_VAULT', if(parameters('useKeyVault'), parameters('useKeyVault'), ''), 'AZURE_OPENAI_API_KEY', if(parameters('useKeyVault'), parameters('openAIKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1), 'AZURE_SEARCH_KEY', if(parameters('useKeyVault'), parameters('searchKeyName'), listAdminKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey), 'AZURE_BLOB_ACCOUNT_KEY', if(parameters('useKeyVault'), parameters('storageAccountKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value), 'AZURE_FORM_RECOGNIZER_KEY', if(parameters('useKeyVault'), parameters('formRecognizerKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1), 'AZURE_CONTENT_SAFETY_KEY', if(parameters('useKeyVault'), parameters('contentSafetyKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1), 'AZURE_SPEECH_SERVICE_KEY', if(parameters('useKeyVault'), parameters('speechKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1)))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "5404929427041984254"
                    },
                    "description": "Creates an Azure App Service in an existing Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "dockerFullImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "useDocker": {
                      "type": "bool",
                      "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "linuxFxVersion": {
                      "type": "string",
                      "defaultValue": "[if(parameters('useDocker'), format('DOCKER|{0}', parameters('dockerFullImageName')), parameters('runtimeNameAndVersion'))]"
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "ftpsState": {
                      "type": "string",
                      "defaultValue": "FtpsOnly"
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "siteConfig": {
                          "linuxFxVersion": "[parameters('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "ftpsState": "[parameters('ftpsState')]",
                          "minTlsVersion": "1.2",
                          "appCommandLine": "[parameters('appCommandLine')]",
                          "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                          "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                          "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                          "healthCheckPath": "[parameters('healthCheckPath')]",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                          }
                        },
                        "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                        "httpsOnly": true
                      },
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                      "properties": {
                        "applicationLogs": {
                          "fileSystem": {
                            "level": "Verbose"
                          }
                        },
                        "detailedErrorMessages": {
                          "enabled": true
                        },
                        "failedRequestsTracing": {
                          "enabled": true
                        },
                        "httpLogs": {
                          "fileSystem": {
                            "enabled": true,
                            "retentionInDays": 1,
                            "retentionInMb": 35
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-appSettings', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-appSettings', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('APPINSIGHTS_ENABLED', string(not(empty(parameters('applicationInsightsName')))), 'SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "15901877046756643519"
                            },
                            "description": "Updates app settings for an Azure App Service."
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the app service resource within the current resource group scope"
                              }
                            },
                            "appSettings": {
                              "type": "secureObject",
                              "metadata": {
                                "description": "The app settings to be applied to the app service"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                              "properties": "[parameters('appSettings')]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-role-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-backend-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search-role-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('useKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "adminweb-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "7922086847377910894"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "WEBSITE_ADMIN_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "WEBSITE_ADMIN_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "WEBSITE_ADMIN_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys')]"
      ]
    },
    {
      "condition": "[equals(parameters('hostingModel'), 'container')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-docker', parameters('adminWebsiteName'))]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-docker', parameters('adminWebsiteName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('azd-service-name', 'adminweb-docker'))]"
          },
          "dockerFullImageName": {
            "value": "fruoccopublic.azurecr.io/rag-adminwebapp"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName')), '2022-09-01').outputs.name.value]"
          },
          "openAIKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value), createObject('value', ''))]",
          "storageAccountKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value), createObject('value', ''))]",
          "formRecognizerKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value), createObject('value', ''))]",
          "searchKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value), createObject('value', ''))]",
          "contentSafetyKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value), createObject('value', ''))]",
          "speechKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value), createObject('value', ''))]",
          "useKeyVault": {
            "value": "[parameters('useKeyVault')]"
          },
          "keyVaultName": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value), createObject('value', ''))]",
          "authType": {
            "value": "[parameters('authType')]"
          },
          "appSettings": {
            "value": {
              "AZURE_BLOB_ACCOUNT_NAME": "[parameters('storageAccountName')]",
              "AZURE_BLOB_CONTAINER_NAME": "[variables('blobContainerName')]",
              "AZURE_CONTENT_SAFETY_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_FORM_RECOGNIZER_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_OPENAI_RESOURCE": "[parameters('azureOpenAIResourceName')]",
              "AZURE_OPENAI_MODEL": "[parameters('azureOpenAIModel')]",
              "AZURE_OPENAI_MODEL_NAME": "[parameters('azureOpenAIModelName')]",
              "AZURE_OPENAI_TEMPERATURE": "[parameters('azureOpenAITemperature')]",
              "AZURE_OPENAI_TOP_P": "[parameters('azureOpenAITopP')]",
              "AZURE_OPENAI_MAX_TOKENS": "[parameters('azureOpenAIMaxTokens')]",
              "AZURE_OPENAI_STOP_SEQUENCE": "[parameters('azureOpenAIStopSequence')]",
              "AZURE_OPENAI_SYSTEM_MESSAGE": "[parameters('azureOpenAISystemMessage')]",
              "AZURE_OPENAI_API_VERSION": "[parameters('azureOpenAIApiVersion')]",
              "AZURE_OPENAI_STREAM": "[parameters('azureOpenAIStream')]",
              "AZURE_OPENAI_EMBEDDING_MODEL": "[parameters('azureOpenAIEmbeddingModel')]",
              "AZURE_SEARCH_SERVICE": "[format('https://{0}.search.windows.net', parameters('azureAISearchName'))]",
              "AZURE_SEARCH_INDEX": "[parameters('azureSearchIndex')]",
              "AZURE_SEARCH_USE_SEMANTIC_SEARCH": "[parameters('azureSearchUseSemanticSearch')]",
              "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": "[parameters('azureSearchSemanticSearchConfig')]",
              "AZURE_SEARCH_INDEX_IS_PRECHUNKED": "[parameters('azureSearchIndexIsPrechunked')]",
              "AZURE_SEARCH_TOP_K": "[parameters('azureSearchTopK')]",
              "AZURE_SEARCH_ENABLE_IN_DOMAIN": "[parameters('azureSearchEnableInDomain')]",
              "AZURE_SEARCH_CONTENT_COLUMNS": "[parameters('azureSearchContentColumns')]",
              "AZURE_SEARCH_FILENAME_COLUMN": "[parameters('azureSearchFilenameColumn')]",
              "AZURE_SEARCH_FILTER": "[parameters('azureSearchFilter')]",
              "AZURE_SEARCH_TITLE_COLUMN": "[parameters('azureSearchTitleColumn')]",
              "AZURE_SEARCH_URL_COLUMN": "[parameters('azureSearchUrlColumn')]",
              "BACKEND_URL": "[format('https://{0}-docker.azurewebsites.net', parameters('functionName'))]",
              "DOCUMENT_PROCESSING_QUEUE_NAME": "[variables('queueName')]",
              "FUNCTION_KEY": "[variables('clientKey')]",
              "ORCHESTRATION_STRATEGY": "[parameters('orchestrationStrategy')]",
              "LOGLEVEL": "[parameters('logLevel')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "8190548878142406566"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "appServicePlanId": {
              "type": "string"
            },
            "appCommandLine": {
              "type": "string",
              "defaultValue": "python -m streamlit run Admin.py --server.port 8000 --server.address 0.0.0.0 --server.enableXsrfProtection false"
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "appSettings": {
              "type": "secureObject",
              "defaultValue": {}
            },
            "useKeyVault": {
              "type": "bool"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "authType": {
              "type": "string"
            },
            "dockerFullImageName": {
              "type": "string",
              "defaultValue": ""
            },
            "useDocker": {
              "type": "bool",
              "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-app-module', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "allowedOrigins": {
                    "value": "[parameters('allowedOrigins')]"
                  },
                  "appCommandLine": "[if(parameters('useDocker'), createObject('value', ''), createObject('value', parameters('appCommandLine')))]",
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "dockerFullImageName": {
                    "value": "[parameters('dockerFullImageName')]"
                  },
                  "scmDoBuildDuringDeployment": "[if(parameters('useDocker'), createObject('value', false()), createObject('value', true()))]",
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('AZURE_AUTH_TYPE', parameters('authType'), 'USE_KEY_VAULT', if(parameters('useKeyVault'), parameters('useKeyVault'), ''), 'AZURE_OPENAI_API_KEY', if(parameters('useKeyVault'), parameters('openAIKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1), 'AZURE_SEARCH_KEY', if(parameters('useKeyVault'), parameters('searchKeyName'), listAdminKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey), 'AZURE_BLOB_ACCOUNT_KEY', if(parameters('useKeyVault'), parameters('storageAccountKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value), 'AZURE_FORM_RECOGNIZER_KEY', if(parameters('useKeyVault'), parameters('formRecognizerKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1), 'AZURE_CONTENT_SAFETY_KEY', if(parameters('useKeyVault'), parameters('contentSafetyKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1), 'AZURE_SPEECH_SERVICE_KEY', if(parameters('useKeyVault'), parameters('speechKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1)))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "5404929427041984254"
                    },
                    "description": "Creates an Azure App Service in an existing Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "dockerFullImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "useDocker": {
                      "type": "bool",
                      "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "app,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "linuxFxVersion": {
                      "type": "string",
                      "defaultValue": "[if(parameters('useDocker'), format('DOCKER|{0}', parameters('dockerFullImageName')), parameters('runtimeNameAndVersion'))]"
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "ftpsState": {
                      "type": "string",
                      "defaultValue": "FtpsOnly"
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                      "properties": {
                        "allow": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "serverFarmId": "[parameters('appServicePlanId')]",
                        "siteConfig": {
                          "linuxFxVersion": "[parameters('linuxFxVersion')]",
                          "alwaysOn": "[parameters('alwaysOn')]",
                          "ftpsState": "[parameters('ftpsState')]",
                          "minTlsVersion": "1.2",
                          "appCommandLine": "[parameters('appCommandLine')]",
                          "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                          "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                          "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                          "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                          "healthCheckPath": "[parameters('healthCheckPath')]",
                          "cors": {
                            "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                          }
                        },
                        "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                        "httpsOnly": true
                      },
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      }
                    },
                    {
                      "type": "Microsoft.Web/sites/config",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                      "properties": {
                        "applicationLogs": {
                          "fileSystem": {
                            "level": "Verbose"
                          }
                        },
                        "detailedErrorMessages": {
                          "enabled": true
                        },
                        "failedRequestsTracing": {
                          "enabled": true
                        },
                        "httpLogs": {
                          "fileSystem": {
                            "enabled": true,
                            "retentionInDays": 1,
                            "retentionInMb": 35
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                        "[resourceId('Microsoft.Resources/deployments', format('{0}-appSettings', parameters('name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-appSettings', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('APPINSIGHTS_ENABLED', string(not(empty(parameters('applicationInsightsName')))), 'SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "15901877046756643519"
                            },
                            "description": "Updates app settings for an Azure App Service."
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the app service resource within the current resource group scope"
                              }
                            },
                            "appSettings": {
                              "type": "secureObject",
                              "metadata": {
                                "description": "The app settings to be applied to the app service"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                              "properties": "[parameters('appSettings')]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-role-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-backend-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search-role-backend",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('useKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "adminweb-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "7922086847377910894"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "WEBSITE_ADMIN_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "WEBSITE_ADMIN_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
            },
            "WEBSITE_ADMIN_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "monitoring",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationInsightsName": {
            "value": "[parameters('applicationInsightsName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": {
              "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', parameters('applicationInsightsName')))]": "Resource"
            }
          },
          "logAnalyticsName": {
            "value": "[parameters('logAnalyticsName')]"
          },
          "applicationInsightsDashboardName": {
            "value": "[format('dash-{0}', parameters('applicationInsightsName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "10048108379044846923"
            },
            "description": "Creates an Application Insights instance and a Log Analytics workspace."
          },
          "parameters": {
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "applicationInsightsDashboardName": {
              "type": "string",
              "defaultValue": ""
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "loganalytics",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('logAnalyticsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "17101038721523251751"
                    },
                    "description": "Creates a Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-12-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "applicationinsights",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "dashboardName": {
                    "value": "[parameters('applicationInsightsDashboardName')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "5016503703443937813"
                    },
                    "description": "Creates an Application Insights instance based on an existing Log Analytics workspace."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "dashboardName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('dashboardName')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "application-insights-dashboard",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('dashboardName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "4596399009213720452"
                            },
                            "description": "Creates a dashboard for an Application Insights instance."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "applicationInsightsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Portal/dashboards",
                              "apiVersion": "2020-09-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "lenses": [
                                  {
                                    "order": 0,
                                    "parts": [
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 0,
                                          "colSpan": 2,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "id",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart",
                                          "asset": {
                                            "idInputName": "id",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "overview"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 2,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "ProactiveDetection"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:20:33.345Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 5,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-08T18:47:35.237Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Usage",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:22:35.782Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Reliability",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 7,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:42:40.072Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "failures"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Responsiveness\r\n",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 11,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:43:37.804Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "performance"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Browser",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 15,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "MetricsExplorerJsonDefinitionId",
                                              "value": "BrowserPerformanceTimelineMetrics"
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "createdTime": "2018-05-08T12:16:27.534Z",
                                                "isInitialTime": false,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "CurrentFilter",
                                              "value": {
                                                "eventTypes": [
                                                  4,
                                                  1,
                                                  3,
                                                  5,
                                                  2,
                                                  6,
                                                  13
                                                ],
                                                "typeFacets": {},
                                                "isPermissive": false
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "browser"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "sessions/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Sessions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "users/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Users",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Unique sessions and users",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "segmentationUsers"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Failed requests",
                                                        "color": "#EC008C"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Failed requests",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "failures"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/duration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server response time",
                                                        "color": "#00BCF2"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server response time",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "performance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/networkDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Page load network connect time",
                                                        "color": "#7E58FF"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/processingDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Client processing time",
                                                        "color": "#44F1C8"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/sendDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Send request time",
                                                        "color": "#EB9371"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/receiveDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Receiving response time",
                                                        "color": "#0672F1"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average page load time breakdown",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/availabilityPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average availability",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "availability"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/server",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "dependencies/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Dependency failures",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server exceptions and Dependency failures",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processorCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Processor time",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process CPU",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average processor and process CPU utilization",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/browser",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Browser exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Browser exceptions",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/count",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability test results count",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Availability test results count",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processIOBytesPerSecond",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process IO rate",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average process I/O rate",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/memoryAvailableBytes",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Available memory",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average available memory",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "connectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'loganalytics')]"
              ]
            }
          ],
          "outputs": {
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.connectionString.value]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.instrumentationKey.value]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2022-09-01').outputs.name.value]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.id.value]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "workbook",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "workbookDisplayName": {
            "value": "[parameters('workbookDisplayName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "hostingPlanName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "functionName": "[if(equals(parameters('hostingModel'), 'container'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('functionName'))), '2022-09-01').outputs.functionName.value), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('functionName')), '2022-09-01').outputs.functionName.value))]",
          "websiteName": "[if(equals(parameters('hostingModel'), 'container'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('websiteName'))), '2022-09-01').outputs.FRONTEND_API_NAME.value), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('websiteName')), '2022-09-01').outputs.FRONTEND_API_NAME.value))]",
          "adminWebsiteName": "[if(equals(parameters('hostingModel'), 'container'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('adminWebsiteName'))), '2022-09-01').outputs.WEBSITE_ADMIN_NAME.value), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('adminWebsiteName')), '2022-09-01').outputs.WEBSITE_ADMIN_NAME.value))]",
          "eventGridSystemTopicName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', variables('eventGridSystemTopicName')), '2022-09-01').outputs.name.value]"
          },
          "logAnalyticsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]"
          },
          "azureOpenAIResourceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "17202152709669682199"
            }
          },
          "parameters": {
            "workbookDisplayName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "hostingPlanName": {
              "type": "string"
            },
            "functionName": {
              "type": "string"
            },
            "websiteName": {
              "type": "string"
            },
            "adminWebsiteName": {
              "type": "string"
            },
            "eventGridSystemTopicName": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "azureOpenAIResourceName": {
              "type": "string"
            },
            "azureAISearchName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            }
          },
          "variables": {
            "wookbookContents": "{\r\n  \"version\": \"Notebook/1.0\",\r\n  \"items\": [\r\n    {\r\n      \"type\": 1,\r\n      \"content\": {\r\n        \"json\": \"# Chat With Your Data Monitoring\"\r\n      },\r\n      \"name\": \"Heading\"\r\n    },\r\n    {\r\n      \"type\": 9,\r\n      \"content\": {\r\n        \"version\": \"KqlParameterItem/1.0\",\r\n        \"crossComponentResources\": [\r\n          \"{subscription-id}\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"id\": \"b958a893-1fec-49c0-9487-5404949fa49d\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"appserviceplan\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.Web/serverfarms'\\r\\n| summarize by id\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Web/serverFarms/{app-service-plan}\"\r\n          },\r\n          {\r\n            \"id\": \"be0e9b6d-0022-413e-8f51-27c30d71f1a2\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"backendappservice\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.Web/sites'\\r\\n| summarize by id\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Web/sites/{backend-app-service}\"\r\n          },\r\n          {\r\n            \"id\": \"ed4452bd-c9f7-4662-816d-5be5a1f7ac3e\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"webappservice\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.Web/sites'\\r\\n| summarize by id\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Web/sites/{web-app-service}\"\r\n          },\r\n          {\r\n            \"id\": \"f2597276-1732-41e2-a8e7-3250adc62843\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"adminappservice\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.Web/sites'\\r\\n| summarize by id\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Web/sites/{admin-app-service}\"\r\n          },\r\n          {\r\n            \"id\": \"d2b7cfb5-2b5e-40e2-996c-471d76431957\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"eventgrid\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'microsoft.eventgrid/systemtopics'\\r\\n| summarize by id\\r\\n\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.EventGrid/systemTopics/{event-grid}\"\r\n          },\r\n          {\r\n            \"id\": \"45dd012e-d365-40aa-8bbe-645fcc397f9f\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"loganalytics\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.OperationalInsights/workspaces'\\r\\n| summarize by id\\r\\n\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.OperationalInsights/workspaces/{log-analytics}\"\r\n          },\r\n          {\r\n            \"id\": \"2c947381-754c-4edb-8e9c-d600b0f6a9bb\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"openai\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.CognitiveServices/accounts'\\r\\n| where kind == 'OpenAI'\\r\\n| summarize by id\\r\\n\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.CognitiveServices/accounts/{open-ai}\"\r\n          },\r\n          {\r\n            \"id\": \"543a5643-4fae-417b-afa8-4fb441045021\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"aisearch\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.Search/searchServices'\\r\\n| summarize by id\\r\\n\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Search/searchServices/{ai-search}\"\r\n          },\r\n          {\r\n            \"id\": \"de9a1a63-4e15-404d-b056-f2f125fb6a7e\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"storageaccount\",\r\n            \"type\": 5,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"query\": \"resources\\r\\n| where type =~ 'Microsoft.Storage/storageAccounts'\\r\\n| summarize by id\\r\\n\",\r\n            \"crossComponentResources\": [\r\n              \"{subscription-id}\"\r\n            ],\r\n            \"isHiddenWhenLocked\": true,\r\n            \"typeSettings\": {\r\n              \"additionalResourceOptions\": [],\r\n              \"showDefault\": false\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"queryType\": 1,\r\n            \"resourceType\": \"microsoft.resourcegraph/resources\",\r\n            \"value\": \"{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.Storage/storageAccounts/{storage-account}\"\r\n          }\r\n        ],\r\n        \"style\": \"pills\",\r\n        \"queryType\": 1,\r\n        \"resourceType\": \"microsoft.resourcegraph/resources\"\r\n      },\r\n      \"conditionalVisibility\": {\r\n        \"parameterName\": \"never\",\r\n        \"comparison\": \"isEqualTo\",\r\n        \"value\": \"show\"\r\n      },\r\n      \"name\": \"Resource Parameters\"\r\n    },\r\n    {\r\n      \"type\": 9,\r\n      \"content\": {\r\n        \"version\": \"KqlParameterItem/1.0\",\r\n        \"crossComponentResources\": [\r\n          \"{subscription-id}\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"id\": \"c612fd9e-e4be-4739-855e-a545344709a4\",\r\n            \"version\": \"KqlParameterItem/1.0\",\r\n            \"name\": \"timerange\",\r\n            \"label\": \"Time Range\",\r\n            \"type\": 4,\r\n            \"isRequired\": true,\r\n            \"isGlobal\": true,\r\n            \"typeSettings\": {\r\n              \"selectableValues\": [\r\n                {\r\n                  \"durationMs\": 300000\r\n                },\r\n                {\r\n                  \"durationMs\": 900000\r\n                },\r\n                {\r\n                  \"durationMs\": 1800000\r\n                },\r\n                {\r\n                  \"durationMs\": 3600000\r\n                },\r\n                {\r\n                  \"durationMs\": 14400000\r\n                },\r\n                {\r\n                  \"durationMs\": 43200000\r\n                },\r\n                {\r\n                  \"durationMs\": 86400000\r\n                },\r\n                {\r\n                  \"durationMs\": 172800000\r\n                },\r\n                {\r\n                  \"durationMs\": 259200000\r\n                },\r\n                {\r\n                  \"durationMs\": 604800000\r\n                },\r\n                {\r\n                  \"durationMs\": 1209600000\r\n                },\r\n                {\r\n                  \"durationMs\": 2419200000\r\n                },\r\n                {\r\n                  \"durationMs\": 2592000000\r\n                },\r\n                {\r\n                  \"durationMs\": 5184000000\r\n                },\r\n                {\r\n                  \"durationMs\": 7776000000\r\n                }\r\n              ],\r\n              \"allowCustom\": true\r\n            },\r\n            \"timeContext\": {\r\n              \"durationMs\": 86400000\r\n            },\r\n            \"value\": {\r\n              \"durationMs\": 3600000\r\n            }\r\n          }\r\n        ],\r\n        \"style\": \"pills\",\r\n        \"queryType\": 1,\r\n        \"resourceType\": \"microsoft.resourcegraph/resources\"\r\n      },\r\n      \"name\": \"Time Picker\"\r\n    },\r\n    {\r\n      \"type\": 11,\r\n      \"content\": {\r\n        \"version\": \"LinkItem/1.0\",\r\n        \"style\": \"tabs\",\r\n        \"links\": [\r\n          {\r\n            \"id\": \"60be91b1-8788-4b49-a8cd-34af2b0eb618\",\r\n            \"cellValue\": \"selTab\",\r\n            \"linkTarget\": \"parameter\",\r\n            \"linkLabel\": \"App Operations\",\r\n            \"subTarget\": \"Operations\",\r\n            \"style\": \"link\"\r\n          },\r\n          {\r\n            \"id\": \"c73d4e39-d3d4-4f60-89b7-1a05ed84ebbd\",\r\n            \"cellValue\": \"selTab\",\r\n            \"linkTarget\": \"parameter\",\r\n            \"linkLabel\": \"App Resources\",\r\n            \"subTarget\": \"Resources\",\r\n            \"style\": \"link\"\r\n          },\r\n          {\r\n            \"id\": \"cbfcb8a9-d229-4b10-a38a-d6826ac29e27\",\r\n            \"cellValue\": \"selTab\",\r\n            \"linkTarget\": \"parameter\",\r\n            \"linkLabel\": \"Open AI\",\r\n            \"subTarget\": \"Open AI\",\r\n            \"style\": \"link\"\r\n          },\r\n          {\r\n            \"id\": \"8c2e5ee1-49c8-4dbd-81cf-2baca35cbc61\",\r\n            \"cellValue\": \"selTab\",\r\n            \"linkTarget\": \"parameter\",\r\n            \"linkLabel\": \"AI Search\",\r\n            \"subTarget\": \"AI Search\",\r\n            \"style\": \"link\"\r\n          },\r\n          {\r\n            \"id\": \"e770e864-ada2-4af5-a5ed-28cca4b137eb\",\r\n            \"cellValue\": \"selTab\",\r\n            \"linkTarget\": \"parameter\",\r\n            \"linkLabel\": \"Storage\",\r\n            \"subTarget\": \"Storage\",\r\n            \"style\": \"link\"\r\n          }\r\n        ]\r\n      },\r\n      \"name\": \"links - 4\"\r\n    },\r\n    {\r\n      \"type\": 12,\r\n      \"content\": {\r\n        \"version\": \"NotebookGroup/1.0\",\r\n        \"groupType\": \"editable\",\r\n        \"items\": [\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook6b31a3ff-2833-43dc-bf82-1782baa17863\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/sites\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"webappservice\",\r\n              \"resourceIds\": [\r\n                \"{webappservice}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http2xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http3xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http4xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http5xx\",\r\n                  \"aggregation\": 1\r\n                }\r\n              ],\r\n              \"title\": \"Web App Responses\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Web App Responses\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook6b31a3ff-2833-43dc-bf82-1782baa17863\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/sites\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"webappservice\",\r\n              \"resourceIds\": [\r\n                \"{webappservice}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--HttpResponseTime\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--HttpResponseTime\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Web App Response Times\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Web App Response Times\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook6b31a3ff-2833-43dc-bf82-1782baa17863\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/sites\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"adminappservice\",\r\n              \"resourceIds\": [\r\n                \"{adminappservice}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http2xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http3xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http4xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http5xx\",\r\n                  \"aggregation\": 1\r\n                }\r\n              ],\r\n              \"title\": \"Admin App Responses\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Admin App Responses\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook6b31a3ff-2833-43dc-bf82-1782baa17863\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/sites\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"adminappservice\",\r\n              \"resourceIds\": [\r\n                \"{adminappservice}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--HttpResponseTime\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--HttpResponseTime\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Admin App Response Times\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Admin App Response Times\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook6b31a3ff-2833-43dc-bf82-1782baa17863\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/sites\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"backendappservice\",\r\n              \"resourceIds\": [\r\n                \"{backendappservice}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http2xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http3xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http4xx\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--Http5xx\",\r\n                  \"aggregation\": 1\r\n                }\r\n              ],\r\n              \"title\": \"Backend Responses\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Backend Responses\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook6b31a3ff-2833-43dc-bf82-1782baa17863\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/sites\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"backendappservice\",\r\n              \"resourceIds\": [\r\n                \"{backendappservice}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--HttpResponseTime\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/sites\",\r\n                  \"metric\": \"microsoft.web/sites--HttpResponseTime\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Backend Response Times\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Backend Response Times\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook9a7f88c8-6e80-41a3-9837-09d29d05a802\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.eventgrid/systemtopics\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"eventgrid\",\r\n              \"resourceIds\": [\r\n                \"{eventgrid}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--PublishSuccessCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--PublishFailCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--MatchedEventCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--DeliverySuccessCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--DeadLetteredCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--DeliveryAttemptFailCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--DroppedEventCount\",\r\n                  \"aggregation\": 1\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--AdvancedFilterEvaluationCount\",\r\n                  \"aggregation\": 1\r\n                }\r\n              ],\r\n              \"title\": \"Event Grid Events\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Event Grid Events\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook14a73dd8-6d4d-43ba-8bea-f7c159ffd85d\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.eventgrid/systemtopics\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"eventgrid\",\r\n              \"resourceIds\": [\r\n                \"{eventgrid}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 3600000\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--PublishSuccessLatencyInMs\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--PublishSuccessLatencyInMs\",\r\n                  \"aggregation\": 3\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--DestinationProcessingDurationInMs\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.eventgrid/systemtopics\",\r\n                  \"metric\": \"microsoft.eventgrid/systemtopics--DestinationProcessingDurationInMs\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Event Grid Latency\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Event Grid Latency\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 3,\r\n            \"content\": {\r\n              \"version\": \"KqlItem/1.0\",\r\n              \"query\": \"AppExceptions\\r\\n | project TimeGenerated, AppRoleName, ExceptionType, OuterMessage\\r\\n\",\r\n              \"size\": 0,\r\n              \"showAnalytics\": true,\r\n              \"title\": \"App Exceptions\",\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"queryType\": 0,\r\n              \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n              \"crossComponentResources\": [\r\n                \"{loganalytics}\"\r\n              ],\r\n              \"gridSettings\": {\r\n                \"sortBy\": [\r\n                  {\r\n                    \"itemKey\": \"TimeGenerated\",\r\n                    \"sortOrder\": 2\r\n                  }\r\n                ]\r\n              },\r\n              \"sortBy\": [\r\n                {\r\n                  \"itemKey\": \"TimeGenerated\",\r\n                  \"sortOrder\": 2\r\n                }\r\n              ]\r\n            },\r\n            \"name\": \"App Exceptions\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 3,\r\n            \"content\": {\r\n              \"version\": \"KqlItem/1.0\",\r\n              \"query\": \"AppRequests\\r\\n | project TimeGenerated, AppRoleName, Name, Success, Url, PerformanceBucket\",\r\n              \"size\": 0,\r\n              \"showAnalytics\": true,\r\n              \"title\": \"App Requests\",\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"queryType\": 0,\r\n              \"resourceType\": \"microsoft.operationalinsights/workspaces\",\r\n              \"crossComponentResources\": [\r\n                \"{loganalytics}\"\r\n              ]\r\n            },\r\n            \"name\": \"App Requests\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      \"conditionalVisibility\": {\r\n        \"parameterName\": \"selTab\",\r\n        \"comparison\": \"isEqualTo\",\r\n        \"value\": \"Operations\"\r\n      },\r\n      \"name\": \"Operations Group\"\r\n    },\r\n    {\r\n      \"type\": 12,\r\n      \"content\": {\r\n        \"version\": \"NotebookGroup/1.0\",\r\n        \"groupType\": \"editable\",\r\n        \"items\": [\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookdf438966-1e39-4357-b905-15a0d9de5cf8\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/serverfarms\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"appserviceplan\",\r\n              \"resourceIds\": [\r\n                \"{appserviceplan}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/serverfarms\",\r\n                  \"metric\": \"microsoft.web/serverfarms--CpuPercentage\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/serverfarms\",\r\n                  \"metric\": \"microsoft.web/serverfarms--CpuPercentage\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"CPU Usage\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"CPU Usage\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook4188b464-c50d-4c92-ae63-4f129284888c\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/serverfarms\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"appserviceplan\",\r\n              \"resourceIds\": [\r\n                \"{appserviceplan}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/serverfarms\",\r\n                  \"metric\": \"microsoft.web/serverfarms--MemoryPercentage\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.web/serverfarms\",\r\n                  \"metric\": \"microsoft.web/serverfarms--MemoryPercentage\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Memory Usage\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Memory Usage\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookd7cc149c-bd48-432d-8343-6c6eebdee5d9\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/serverfarms\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"appserviceplan\",\r\n              \"resourceIds\": [\r\n                \"{appserviceplan}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/serverfarms\",\r\n                  \"metric\": \"microsoft.web/serverfarms--BytesReceived\",\r\n                  \"aggregation\": 1,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Data In\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Data In\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook54212fe0-54bb-4b55-9be0-efbd987d461b\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.web/serverfarms\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"appserviceplan\",\r\n              \"resourceIds\": [\r\n                \"{appserviceplan}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.web/serverfarms\",\r\n                  \"metric\": \"microsoft.web/serverfarms--BytesSent\",\r\n                  \"aggregation\": 1,\r\n                  \"splitBy\": null,\r\n                  \"columnName\": \"\"\r\n                }\r\n              ],\r\n              \"title\": \"Data Out\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Data Out\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      \"conditionalVisibility\": {\r\n        \"parameterName\": \"selTab\",\r\n        \"comparison\": \"isEqualTo\",\r\n        \"value\": \"Resources\"\r\n      },\r\n      \"name\": \"Resources Group\"\r\n    },\r\n    {\r\n      \"type\": 12,\r\n      \"content\": {\r\n        \"version\": \"NotebookGroup/1.0\",\r\n        \"groupType\": \"editable\",\r\n        \"items\": [\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbooka838a7f8-a1e2-42c2-b8eb-2601e4486462\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.cognitiveservices/accounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"openai\",\r\n              \"resourceIds\": [\r\n                \"{openai}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.cognitiveservices/accounts\",\r\n                  \"metric\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests\",\r\n                  \"aggregation\": 1,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Open AI Requests by Deployment\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"formatters\": [\r\n                  {\r\n                    \"columnMatch\": \"Subscription\",\r\n                    \"formatter\": 5\r\n                  },\r\n                  {\r\n                    \"columnMatch\": \"Name\",\r\n                    \"formatter\": 13,\r\n                    \"formatOptions\": {\r\n                      \"linkTarget\": \"Resource\"\r\n                    }\r\n                  },\r\n                  {\r\n                    \"columnMatch\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests Timeline\",\r\n                    \"formatter\": 5\r\n                  },\r\n                  {\r\n                    \"columnMatch\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests\",\r\n                    \"formatter\": 1,\r\n                    \"numberFormat\": {\r\n                      \"unit\": 0,\r\n                      \"options\": null\r\n                    }\r\n                  }\r\n                ],\r\n                \"rowLimit\": 10000,\r\n                \"labelSettings\": [\r\n                  {\r\n                    \"columnId\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests\",\r\n                    \"label\": \"Azure OpenAI Requests (Sum)\"\r\n                  },\r\n                  {\r\n                    \"columnId\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests Timeline\",\r\n                    \"label\": \"Azure OpenAI Requests Timeline\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Open AI Requests by Deployment\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbooka838a7f8-a1e2-42c2-b8eb-2601e4486462\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.cognitiveservices/accounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"openai\",\r\n              \"resourceIds\": [\r\n                \"{openai}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.cognitiveservices/accounts\",\r\n                  \"metric\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests\",\r\n                  \"aggregation\": 1,\r\n                  \"splitBy\": \"ModelVersion\"\r\n                }\r\n              ],\r\n              \"title\": \"Open AI Requests by Model Version\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"formatters\": [\r\n                  {\r\n                    \"columnMatch\": \"Subscription\",\r\n                    \"formatter\": 5\r\n                  },\r\n                  {\r\n                    \"columnMatch\": \"Name\",\r\n                    \"formatter\": 13,\r\n                    \"formatOptions\": {\r\n                      \"linkTarget\": \"Resource\"\r\n                    }\r\n                  },\r\n                  {\r\n                    \"columnMatch\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests Timeline\",\r\n                    \"formatter\": 5\r\n                  },\r\n                  {\r\n                    \"columnMatch\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests\",\r\n                    \"formatter\": 1,\r\n                    \"numberFormat\": {\r\n                      \"unit\": 0,\r\n                      \"options\": null\r\n                    }\r\n                  }\r\n                ],\r\n                \"rowLimit\": 10000,\r\n                \"labelSettings\": [\r\n                  {\r\n                    \"columnId\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests\",\r\n                    \"label\": \"Azure OpenAI Requests (Sum)\"\r\n                  },\r\n                  {\r\n                    \"columnId\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  HTTP Requests-AzureOpenAIRequests Timeline\",\r\n                    \"label\": \"Azure OpenAI Requests Timeline\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Open AI Requests by Model Version\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook5c797794-acb4-47a5-b92f-36abf913ab8e\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.cognitiveservices/accounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"openai\",\r\n              \"resourceIds\": [\r\n                \"{openai}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.cognitiveservices/accounts\",\r\n                  \"metric\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  Usage-GeneratedTokens\",\r\n                  \"aggregation\": 7,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Generated Completions Tokens\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Generated Completions Tokens\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook5c797794-acb4-47a5-b92f-36abf913ab8e\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.cognitiveservices/accounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"openai\",\r\n              \"resourceIds\": [\r\n                \"{openai}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.cognitiveservices/accounts\",\r\n                  \"metric\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  Usage-TokenTransaction\",\r\n                  \"aggregation\": 7,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Processed Inference Tokens\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Processed Inference Tokens\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook5c797794-acb4-47a5-b92f-36abf913ab8e\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.cognitiveservices/accounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"openai\",\r\n              \"resourceIds\": [\r\n                \"{openai}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.cognitiveservices/accounts\",\r\n                  \"metric\": \"microsoft.cognitiveservices/accounts-Azure OpenAI  Usage-ProcessedPromptTokens\",\r\n                  \"aggregation\": 7,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Processed Prompt Tokens\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Processed Prompt Tokens\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      \"conditionalVisibility\": {\r\n        \"parameterName\": \"selTab\",\r\n        \"comparison\": \"isEqualTo\",\r\n        \"value\": \"Open AI\"\r\n      },\r\n      \"name\": \"Open AI Group\"\r\n    },\r\n    {\r\n      \"type\": 12,\r\n      \"content\": {\r\n        \"version\": \"NotebookGroup/1.0\",\r\n        \"groupType\": \"editable\",\r\n        \"items\": [\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookacb9885c-d72e-468f-a567-655708cfec44\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.search/searchservices\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"aisearch\",\r\n              \"resourceIds\": [\r\n                \"{aisearch}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.search/searchservices\",\r\n                  \"metric\": \"microsoft.search/searchservices--SearchLatency\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.search/searchservices\",\r\n                  \"metric\": \"microsoft.search/searchservices--SearchLatency\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Search Latency\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Search Latency\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookc3418582-4b58-4016-8180-d3ecff43c408\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.search/searchservices\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"aisearch\",\r\n              \"resourceIds\": [\r\n                \"{aisearch}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.search/searchservices\",\r\n                  \"metric\": \"microsoft.search/searchservices--SearchQueriesPerSecond\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.search/searchservices\",\r\n                  \"metric\": \"microsoft.search/searchservices--SearchQueriesPerSecond\",\r\n                  \"aggregation\": 3\r\n                }\r\n              ],\r\n              \"title\": \"Search Queries per second\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Search Queries per second\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook9e9aa03e-6125-4347-b768-ca7151d413e3\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.search/searchservices\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"aisearch\",\r\n              \"resourceIds\": [\r\n                \"{aisearch}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.search/searchservices\",\r\n                  \"metric\": \"microsoft.search/searchservices--ThrottledSearchQueriesPercentage\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Throttled Search Queries Percentage\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"showPin\": false,\r\n            \"name\": \"Throttled Search Queries Percentage\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      \"conditionalVisibility\": {\r\n        \"parameterName\": \"selTab\",\r\n        \"comparison\": \"isEqualTo\",\r\n        \"value\": \"AI Search\"\r\n      },\r\n      \"name\": \"Search Group\"\r\n    },\r\n    {\r\n      \"type\": 12,\r\n      \"content\": {\r\n        \"version\": \"NotebookGroup/1.0\",\r\n        \"groupType\": \"editable\",\r\n        \"items\": [\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookd5a8891d-2021-47cb-a5aa-d92dd112aab0\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.storage/storageaccounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"storageaccount\",\r\n              \"resourceIds\": [\r\n                \"{storageaccount}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts-Capacity-UsedCapacity\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/blobservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/blobservices-Capacity-BlobCapacity\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/queueservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/queueservices-Capacity-QueueCapacity\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/tableservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/tableservices-Capacity-TableCapacity\",\r\n                  \"aggregation\": 4\r\n                }\r\n              ],\r\n              \"title\": \"Capacity\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Storage Capacity\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookd5a8891d-2021-47cb-a5aa-d92dd112aab0\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.storage/storageaccounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"storageaccount\",\r\n              \"resourceIds\": [\r\n                \"{storageaccount}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/blobservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/blobservices-Capacity-ContainerCount\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/blobservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/blobservices-Capacity-BlobCount\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/queueservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/queueservices-Capacity-QueueCount\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/queueservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/queueservices-Capacity-QueueMessageCount\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/tableservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/tableservices-Capacity-TableCount\",\r\n                  \"aggregation\": 4\r\n                },\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts/tableservices\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts/tableservices-Capacity-TableEntityCount\",\r\n                  \"aggregation\": 4\r\n                }\r\n              ],\r\n              \"title\": \"Counts\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Storage Counts\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook14f8930f-94fe-4c30-b21b-97e802e48f53\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.storage/storageaccounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"storageaccount\",\r\n              \"resourceIds\": [\r\n                \"{storageaccount}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts-Transaction-Ingress\",\r\n                  \"aggregation\": 1,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Ingress\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Storage Ingress\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbook14f8930f-94fe-4c30-b21b-97e802e48f53\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.storage/storageaccounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"storageaccount\",\r\n              \"resourceIds\": [\r\n                \"{storageaccount}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts-Transaction-Egress\",\r\n                  \"aggregation\": 1,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Egress\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Storage Egress\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          },\r\n          {\r\n            \"type\": 10,\r\n            \"content\": {\r\n              \"chartId\": \"workbookdc8d463d-4a35-49c4-a9ad-1a4b23f8cadd\",\r\n              \"version\": \"MetricsItem/2.0\",\r\n              \"size\": 0,\r\n              \"chartType\": 2,\r\n              \"resourceType\": \"microsoft.storage/storageaccounts\",\r\n              \"metricScope\": 0,\r\n              \"resourceParameter\": \"storageaccount\",\r\n              \"resourceIds\": [\r\n                \"{storageaccount}\"\r\n              ],\r\n              \"timeContextFromParameter\": \"timerange\",\r\n              \"timeContext\": {\r\n                \"durationMs\": 0\r\n              },\r\n              \"metrics\": [\r\n                {\r\n                  \"namespace\": \"microsoft.storage/storageaccounts\",\r\n                  \"metric\": \"microsoft.storage/storageaccounts-Transaction-SuccessE2ELatency\",\r\n                  \"aggregation\": 4,\r\n                  \"splitBy\": null\r\n                }\r\n              ],\r\n              \"title\": \"Storage Latency\",\r\n              \"showOpenInMe\": true,\r\n              \"timeBrushParameterName\": \"timerange\",\r\n              \"timeBrushExportOnlyWhenBrushed\": true,\r\n              \"gridSettings\": {\r\n                \"rowLimit\": 10000\r\n              }\r\n            },\r\n            \"customWidth\": \"50\",\r\n            \"name\": \"Storage Latency\",\r\n            \"styleSettings\": {\r\n              \"showBorder\": true\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      \"conditionalVisibility\": {\r\n        \"parameterName\": \"selTab\",\r\n        \"comparison\": \"isEqualTo\",\r\n        \"value\": \"Storage\"\r\n      },\r\n      \"name\": \"Storage Group\"\r\n    }\r\n  ],\r\n  \"fallbackResourceIds\": [\r\n    \"azure monitor\"\r\n  ],\r\n  \"styleSettings\": {\r\n    \"paddingStyle\": \"narrow\",\r\n    \"spacingStyle\": \"narrow\"\r\n  },\r\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\r\n}",
            "wookbookContentsSubReplaced": "[replace(variables('wookbookContents'), '{subscription-id}', subscription().id)]",
            "wookbookContentsRGReplaced": "[replace(variables('wookbookContentsSubReplaced'), '{resource-group}', resourceGroup().name)]",
            "wookbookContentsAppServicePlanReplaced": "[replace(variables('wookbookContentsRGReplaced'), '{app-service-plan}', parameters('hostingPlanName'))]",
            "wookbookContentsBackendAppServiceReplaced": "[replace(variables('wookbookContentsAppServicePlanReplaced'), '{backend-app-service}', parameters('functionName'))]",
            "wookbookContentsWebAppServiceReplaced": "[replace(variables('wookbookContentsBackendAppServiceReplaced'), '{web-app-service}', parameters('websiteName'))]",
            "wookbookContentsAdminAppServiceReplaced": "[replace(variables('wookbookContentsWebAppServiceReplaced'), '{admin-app-service}', parameters('adminWebsiteName'))]",
            "wookbookContentsEventGridReplaced": "[replace(variables('wookbookContentsAdminAppServiceReplaced'), '{event-grid}', parameters('eventGridSystemTopicName'))]",
            "wookbookContentsLogAnalyticsReplaced": "[replace(variables('wookbookContentsEventGridReplaced'), '{log-analytics}', parameters('logAnalyticsName'))]",
            "wookbookContentsOpenAIReplaced": "[replace(variables('wookbookContentsLogAnalyticsReplaced'), '{open-ai}', parameters('azureOpenAIResourceName'))]",
            "wookbookContentsAISearchReplaced": "[replace(variables('wookbookContentsOpenAIReplaced'), '{ai-search}', parameters('azureAISearchName'))]",
            "wookbookContentsStorageAccountReplaced": "[replace(variables('wookbookContentsAISearchReplaced'), '{storage-account}', parameters('storageAccountName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('workbookDisplayName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "workbookId": {
                    "value": "d9bd03af-7ef0-4bac-b91b-b14ee4c7002b"
                  },
                  "workbookDisplayName": {
                    "value": "[parameters('workbookDisplayName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "workbookContents": {
                    "value": "[variables('wookbookContentsStorageAccountReplaced')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "10520241319603231084"
                    }
                  },
                  "parameters": {
                    "workbookDisplayName": {
                      "type": "string",
                      "metadata": {
                        "description": "The friendly name for the workbook.  This name must be unique within a resource group."
                      }
                    },
                    "workbookType": {
                      "type": "string",
                      "defaultValue": "workbook",
                      "metadata": {
                        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
                      }
                    },
                    "workbookSourceId": {
                      "type": "string",
                      "defaultValue": "azure monitor",
                      "metadata": {
                        "description": "The id of resource instance to which the workbook will be associated"
                      }
                    },
                    "workbookId": {
                      "type": "string",
                      "metadata": {
                        "description": "The unique guid for this workbook instance"
                      }
                    },
                    "workbookContents": {
                      "type": "string",
                      "metadata": {
                        "description": "The json content of the workbook"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/workbooks",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('workbookId')]",
                      "location": "[parameters('location')]",
                      "kind": "shared",
                      "properties": {
                        "displayName": "[parameters('workbookDisplayName')]",
                        "serializedData": "[parameters('workbookContents')]",
                        "version": "1.0",
                        "sourceId": "[parameters('workbookSourceId')]",
                        "category": "[parameters('workbookType')]"
                      }
                    }
                  ],
                  "outputs": {
                    "workbookId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/workbooks', parameters('workbookId'))]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('adminWebsiteName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('adminWebsiteName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', variables('eventGridSystemTopicName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('functionName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('functionName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('websiteName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('websiteName')))]"
      ]
    },
    {
      "condition": "[equals(parameters('hostingModel'), 'code')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('functionName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('functionName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('azd-service-name', 'function'))]"
          },
          "runtimeName": {
            "value": "python"
          },
          "runtimeVersion": {
            "value": "3.11"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName')), '2022-09-01').outputs.name.value]"
          },
          "clientKey": {
            "value": "[variables('clientKey')]"
          },
          "openAIKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value), createObject('value', ''))]",
          "storageAccountKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value), createObject('value', ''))]",
          "formRecognizerKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value), createObject('value', ''))]",
          "searchKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value), createObject('value', ''))]",
          "contentSafetyKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value), createObject('value', ''))]",
          "speechKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value), createObject('value', ''))]",
          "useKeyVault": {
            "value": "[parameters('useKeyVault')]"
          },
          "keyVaultName": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value), createObject('value', ''))]",
          "authType": {
            "value": "[parameters('authType')]"
          },
          "appSettings": {
            "value": {
              "AZURE_BLOB_ACCOUNT_NAME": "[parameters('storageAccountName')]",
              "AZURE_BLOB_CONTAINER_NAME": "[variables('blobContainerName')]",
              "AZURE_CONTENT_SAFETY_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_FORM_RECOGNIZER_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_OPENAI_MODEL": "[parameters('azureOpenAIModel')]",
              "AZURE_OPENAI_EMBEDDING_MODEL": "[parameters('azureOpenAIEmbeddingModel')]",
              "AZURE_OPENAI_RESOURCE": "[parameters('azureOpenAIResourceName')]",
              "AZURE_OPENAI_API_VERSION": "[parameters('azureOpenAIApiVersion')]",
              "AZURE_SEARCH_INDEX": "[parameters('azureSearchIndex')]",
              "AZURE_SEARCH_SERVICE": "[format('https://{0}.search.windows.net', parameters('azureAISearchName'))]",
              "DOCUMENT_PROCESSING_QUEUE_NAME": "[variables('queueName')]",
              "ORCHESTRATION_STRATEGY": "[parameters('orchestrationStrategy')]",
              "LOGLEVEL": "[parameters('logLevel')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "101087404009946087"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": ""
            },
            "appServicePlanId": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "appSettings": {
              "type": "secureObject",
              "defaultValue": {}
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "clientKey": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "useKeyVault": {
              "type": "bool"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "authType": {
              "type": "string"
            },
            "dockerFullImageName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/host/functionKeys",
              "apiVersion": "2018-11-01",
              "name": "[format('{0}/default/clientKey', parameters('name'))]",
              "properties": {
                "name": "ClientKey",
                "value": "[parameters('clientKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', 'WaitFunctionDeploymentSection')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "WaitFunctionDeploymentSection",
              "kind": "AzurePowerShell",
              "location": "[parameters('location')]",
              "properties": {
                "azPowerShellVersion": "3.0",
                "scriptContent": "start-sleep -Seconds 300",
                "cleanupPreference": "Always",
                "retentionInterval": "PT1H"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-app-module', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "dockerFullImageName": {
                    "value": "[parameters('dockerFullImageName')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'false', 'AZURE_AUTH_TYPE', parameters('authType'), 'USE_KEY_VAULT', if(parameters('useKeyVault'), parameters('useKeyVault'), ''), 'AZURE_OPENAI_API_KEY', if(parameters('useKeyVault'), parameters('openAIKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1), 'AZURE_SEARCH_KEY', if(parameters('useKeyVault'), parameters('searchKeyName'), listAdminKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey), 'AZURE_BLOB_ACCOUNT_KEY', if(parameters('useKeyVault'), parameters('storageAccountKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value), 'AZURE_FORM_RECOGNIZER_KEY', if(parameters('useKeyVault'), parameters('formRecognizerKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1), 'AZURE_CONTENT_SAFETY_KEY', if(parameters('useKeyVault'), parameters('contentSafetyKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1), 'AZURE_SPEECH_SERVICE_KEY', if(parameters('useKeyVault'), parameters('speechKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1)))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "8846903019412097631"
                    },
                    "description": "Creates an Azure Function in an existing Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "extensionVersion": {
                      "type": "string",
                      "defaultValue": "~4",
                      "allowedValues": [
                        "~4",
                        "~3",
                        "~2",
                        "~1"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "functionapp,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "dockerFullImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "useDocker": {
                      "type": "bool",
                      "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-functions', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "allowedOrigins": {
                            "value": "[parameters('allowedOrigins')]"
                          },
                          "alwaysOn": {
                            "value": "[parameters('alwaysOn')]"
                          },
                          "appCommandLine": "[if(parameters('useDocker'), createObject('value', ''), createObject('value', parameters('appCommandLine')))]",
                          "applicationInsightsName": {
                            "value": "[parameters('applicationInsightsName')]"
                          },
                          "appServicePlanId": {
                            "value": "[parameters('appServicePlanId')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value, environment().suffixes.storage), 'FUNCTIONS_EXTENSION_VERSION', parameters('extensionVersion')), if(not(parameters('useDocker')), createObject('FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')), createObject()))]"
                          },
                          "clientAffinityEnabled": {
                            "value": "[parameters('clientAffinityEnabled')]"
                          },
                          "enableOryxBuild": {
                            "value": "[parameters('enableOryxBuild')]"
                          },
                          "functionAppScaleLimit": {
                            "value": "[parameters('functionAppScaleLimit')]"
                          },
                          "healthCheckPath": {
                            "value": "[parameters('healthCheckPath')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "kind": {
                            "value": "[parameters('kind')]"
                          },
                          "managedIdentity": {
                            "value": "[parameters('managedIdentity')]"
                          },
                          "minimumElasticInstanceCount": {
                            "value": "[parameters('minimumElasticInstanceCount')]"
                          },
                          "numberOfWorkers": {
                            "value": "[parameters('numberOfWorkers')]"
                          },
                          "runtimeName": {
                            "value": "[parameters('runtimeName')]"
                          },
                          "runtimeVersion": {
                            "value": "[parameters('runtimeVersion')]"
                          },
                          "runtimeNameAndVersion": {
                            "value": "[parameters('runtimeNameAndVersion')]"
                          },
                          "scmDoBuildDuringDeployment": "[if(parameters('useDocker'), createObject('value', false()), createObject('value', true()))]",
                          "use32BitWorkerProcess": {
                            "value": "[parameters('use32BitWorkerProcess')]"
                          },
                          "dockerFullImageName": {
                            "value": "[parameters('dockerFullImageName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "5404929427041984254"
                            },
                            "description": "Creates an Azure App Service in an existing Azure App Service plan."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "applicationInsightsName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appServicePlanId": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "managedIdentity": {
                              "type": "bool",
                              "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                            },
                            "runtimeName": {
                              "type": "string",
                              "allowedValues": [
                                "dotnet",
                                "dotnetcore",
                                "dotnet-isolated",
                                "node",
                                "python",
                                "java",
                                "powershell",
                                "custom"
                              ]
                            },
                            "runtimeNameAndVersion": {
                              "type": "string",
                              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                            },
                            "runtimeVersion": {
                              "type": "string"
                            },
                            "dockerFullImageName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "useDocker": {
                              "type": "bool",
                              "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "app,linux"
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "alwaysOn": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "appCommandLine": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appSettings": {
                              "type": "secureObject",
                              "defaultValue": {}
                            },
                            "clientAffinityEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "enableOryxBuild": {
                              "type": "bool",
                              "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                            },
                            "functionAppScaleLimit": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "linuxFxVersion": {
                              "type": "string",
                              "defaultValue": "[if(parameters('useDocker'), format('DOCKER|{0}', parameters('dockerFullImageName')), parameters('runtimeNameAndVersion'))]"
                            },
                            "minimumElasticInstanceCount": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "numberOfWorkers": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "scmDoBuildDuringDeployment": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "use32BitWorkerProcess": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "ftpsState": {
                              "type": "string",
                              "defaultValue": "FtpsOnly"
                            },
                            "healthCheckPath": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                              "properties": {
                                "allow": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                              "properties": {
                                "allow": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites",
                              "apiVersion": "2022-03-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "serverFarmId": "[parameters('appServicePlanId')]",
                                "siteConfig": {
                                  "linuxFxVersion": "[parameters('linuxFxVersion')]",
                                  "alwaysOn": "[parameters('alwaysOn')]",
                                  "ftpsState": "[parameters('ftpsState')]",
                                  "minTlsVersion": "1.2",
                                  "appCommandLine": "[parameters('appCommandLine')]",
                                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                                  "healthCheckPath": "[parameters('healthCheckPath')]",
                                  "cors": {
                                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                                  }
                                },
                                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                                "httpsOnly": true
                              },
                              "identity": {
                                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                              }
                            },
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                              "properties": {
                                "applicationLogs": {
                                  "fileSystem": {
                                    "level": "Verbose"
                                  }
                                },
                                "detailedErrorMessages": {
                                  "enabled": true
                                },
                                "failedRequestsTracing": {
                                  "enabled": true
                                },
                                "httpLogs": {
                                  "fileSystem": {
                                    "enabled": true,
                                    "retentionInDays": 1,
                                    "retentionInMb": 35
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                                "[resourceId('Microsoft.Resources/deployments', format('{0}-appSettings', parameters('name')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-appSettings', parameters('name'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "name": {
                                    "value": "[parameters('name')]"
                                  },
                                  "appSettings": {
                                    "value": "[union(parameters('appSettings'), createObject('APPINSIGHTS_ENABLED', string(not(empty(parameters('applicationInsightsName')))), 'SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.26.170.59819",
                                      "templateHash": "15901877046756643519"
                                    },
                                    "description": "Updates app settings for an Azure App Service."
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "The name of the app service resource within the current resource group scope"
                                      }
                                    },
                                    "appSettings": {
                                      "type": "secureObject",
                                      "metadata": {
                                        "description": "The app settings to be applied to the app service"
                                      }
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Web/sites/config",
                                      "apiVersion": "2022-03-01",
                                      "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                                      "properties": "[parameters('appSettings')]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2022-09-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2022-09-01').outputs.uri.value]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-function-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-blob-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-queue-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "974c5e8b-45b9-4653-ba55-5f855dd0fb88"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('useKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "function-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "7922086847377910894"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "FUNCTION_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "functionName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys')]"
      ]
    },
    {
      "condition": "[equals(parameters('hostingModel'), 'container')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-docker', parameters('functionName'))]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-docker', parameters('functionName'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[union(variables('tags'), createObject('azd-service-name', 'function-docker'))]"
          },
          "dockerFullImageName": {
            "value": "fruoccopublic.azurecr.io/rag-backend"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName')), '2022-09-01').outputs.name.value]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsName.value]"
          },
          "azureOpenAIName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName')), '2022-09-01').outputs.name.value]"
          },
          "azureAISearchName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.name.value]"
          },
          "formRecognizerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.name.value]"
          },
          "contentSafetyName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.name.value]"
          },
          "speechServiceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName')), '2022-09-01').outputs.name.value]"
          },
          "clientKey": {
            "value": "[variables('clientKey')]"
          },
          "openAIKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value), createObject('value', ''))]",
          "storageAccountKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value), createObject('value', ''))]",
          "formRecognizerKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value), createObject('value', ''))]",
          "searchKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value), createObject('value', ''))]",
          "contentSafetyKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value), createObject('value', ''))]",
          "speechKeyName": "[if(parameters('useKeyVault'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value), createObject('value', ''))]",
          "useKeyVault": {
            "value": "[parameters('useKeyVault')]"
          },
          "keyVaultName": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value), createObject('value', ''))]",
          "authType": {
            "value": "[parameters('authType')]"
          },
          "appSettings": {
            "value": {
              "AZURE_BLOB_ACCOUNT_NAME": "[parameters('storageAccountName')]",
              "AZURE_BLOB_CONTAINER_NAME": "[variables('blobContainerName')]",
              "AZURE_CONTENT_SAFETY_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_FORM_RECOGNIZER_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]",
              "AZURE_OPENAI_MODEL": "[parameters('azureOpenAIModel')]",
              "AZURE_OPENAI_EMBEDDING_MODEL": "[parameters('azureOpenAIEmbeddingModel')]",
              "AZURE_OPENAI_RESOURCE": "[parameters('azureOpenAIResourceName')]",
              "AZURE_OPENAI_API_VERSION": "[parameters('azureOpenAIApiVersion')]",
              "AZURE_SEARCH_INDEX": "[parameters('azureSearchIndex')]",
              "AZURE_SEARCH_SERVICE": "[format('https://{0}.search.windows.net', parameters('azureAISearchName'))]",
              "DOCUMENT_PROCESSING_QUEUE_NAME": "[variables('queueName')]",
              "ORCHESTRATION_STRATEGY": "[parameters('orchestrationStrategy')]",
              "LOGLEVEL": "[parameters('logLevel')]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "101087404009946087"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": ""
            },
            "appServicePlanId": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": ""
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "appSettings": {
              "type": "secureObject",
              "defaultValue": {}
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "runtimeName": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "clientKey": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureOpenAIName": {
              "type": "string",
              "defaultValue": ""
            },
            "azureAISearchName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechServiceName": {
              "type": "string",
              "defaultValue": ""
            },
            "useKeyVault": {
              "type": "bool"
            },
            "openAIKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "storageAccountKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "formRecognizerKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "searchKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "contentSafetyKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "speechKeyName": {
              "type": "string",
              "defaultValue": ""
            },
            "authType": {
              "type": "string"
            },
            "dockerFullImageName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/host/functionKeys",
              "apiVersion": "2018-11-01",
              "name": "[format('{0}/default/clientKey', parameters('name'))]",
              "properties": {
                "name": "ClientKey",
                "value": "[parameters('clientKey')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', 'WaitFunctionDeploymentSection')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "WaitFunctionDeploymentSection",
              "kind": "AzurePowerShell",
              "location": "[parameters('location')]",
              "properties": {
                "azPowerShellVersion": "3.0",
                "scriptContent": "start-sleep -Seconds 300",
                "cleanupPreference": "Always",
                "retentionInterval": "PT1H"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-app-module', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "runtimeName": {
                    "value": "[parameters('runtimeName')]"
                  },
                  "runtimeVersion": {
                    "value": "[parameters('runtimeVersion')]"
                  },
                  "dockerFullImageName": {
                    "value": "[parameters('dockerFullImageName')]"
                  },
                  "appSettings": {
                    "value": "[union(parameters('appSettings'), createObject('WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'false', 'AZURE_AUTH_TYPE', parameters('authType'), 'USE_KEY_VAULT', if(parameters('useKeyVault'), parameters('useKeyVault'), ''), 'AZURE_OPENAI_API_KEY', if(parameters('useKeyVault'), parameters('openAIKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('azureOpenAIName')), '2023-05-01').key1), 'AZURE_SEARCH_KEY', if(parameters('useKeyVault'), parameters('searchKeyName'), listAdminKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Search/searchServices', parameters('azureAISearchName')), '2021-04-01-preview').primaryKey), 'AZURE_BLOB_ACCOUNT_KEY', if(parameters('useKeyVault'), parameters('storageAccountKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value), 'AZURE_FORM_RECOGNIZER_KEY', if(parameters('useKeyVault'), parameters('formRecognizerKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('formRecognizerName')), '2023-05-01').key1), 'AZURE_CONTENT_SAFETY_KEY', if(parameters('useKeyVault'), parameters('contentSafetyKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('contentSafetyName')), '2023-05-01').key1), 'AZURE_SPEECH_SERVICE_KEY', if(parameters('useKeyVault'), parameters('speechKeyName'), listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.CognitiveServices/accounts', parameters('speechServiceName')), '2023-05-01').key1)))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "8846903019412097631"
                    },
                    "description": "Creates an Azure Function in an existing Azure App Service plan."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "extensionVersion": {
                      "type": "string",
                      "defaultValue": "~4",
                      "allowedValues": [
                        "~4",
                        "~3",
                        "~2",
                        "~1"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "functionapp,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "secureObject",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "healthCheckPath": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "dockerFullImageName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "useDocker": {
                      "type": "bool",
                      "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-functions', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "allowedOrigins": {
                            "value": "[parameters('allowedOrigins')]"
                          },
                          "alwaysOn": {
                            "value": "[parameters('alwaysOn')]"
                          },
                          "appCommandLine": "[if(parameters('useDocker'), createObject('value', ''), createObject('value', parameters('appCommandLine')))]",
                          "applicationInsightsName": {
                            "value": "[parameters('applicationInsightsName')]"
                          },
                          "appServicePlanId": {
                            "value": "[parameters('appServicePlanId')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value, environment().suffixes.storage), 'FUNCTIONS_EXTENSION_VERSION', parameters('extensionVersion')), if(not(parameters('useDocker')), createObject('FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')), createObject()))]"
                          },
                          "clientAffinityEnabled": {
                            "value": "[parameters('clientAffinityEnabled')]"
                          },
                          "enableOryxBuild": {
                            "value": "[parameters('enableOryxBuild')]"
                          },
                          "functionAppScaleLimit": {
                            "value": "[parameters('functionAppScaleLimit')]"
                          },
                          "healthCheckPath": {
                            "value": "[parameters('healthCheckPath')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "kind": {
                            "value": "[parameters('kind')]"
                          },
                          "managedIdentity": {
                            "value": "[parameters('managedIdentity')]"
                          },
                          "minimumElasticInstanceCount": {
                            "value": "[parameters('minimumElasticInstanceCount')]"
                          },
                          "numberOfWorkers": {
                            "value": "[parameters('numberOfWorkers')]"
                          },
                          "runtimeName": {
                            "value": "[parameters('runtimeName')]"
                          },
                          "runtimeVersion": {
                            "value": "[parameters('runtimeVersion')]"
                          },
                          "runtimeNameAndVersion": {
                            "value": "[parameters('runtimeNameAndVersion')]"
                          },
                          "scmDoBuildDuringDeployment": "[if(parameters('useDocker'), createObject('value', false()), createObject('value', true()))]",
                          "use32BitWorkerProcess": {
                            "value": "[parameters('use32BitWorkerProcess')]"
                          },
                          "dockerFullImageName": {
                            "value": "[parameters('dockerFullImageName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.26.170.59819",
                              "templateHash": "5404929427041984254"
                            },
                            "description": "Creates an Azure App Service in an existing Azure App Service plan."
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "applicationInsightsName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appServicePlanId": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "managedIdentity": {
                              "type": "bool",
                              "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                            },
                            "runtimeName": {
                              "type": "string",
                              "allowedValues": [
                                "dotnet",
                                "dotnetcore",
                                "dotnet-isolated",
                                "node",
                                "python",
                                "java",
                                "powershell",
                                "custom"
                              ]
                            },
                            "runtimeNameAndVersion": {
                              "type": "string",
                              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                            },
                            "runtimeVersion": {
                              "type": "string"
                            },
                            "dockerFullImageName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "useDocker": {
                              "type": "bool",
                              "defaultValue": "[not(equals(parameters('dockerFullImageName'), ''))]"
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "app,linux"
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "alwaysOn": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "appCommandLine": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appSettings": {
                              "type": "secureObject",
                              "defaultValue": {}
                            },
                            "clientAffinityEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "enableOryxBuild": {
                              "type": "bool",
                              "defaultValue": "[if(parameters('useDocker'), false(), contains(parameters('kind'), 'linux'))]"
                            },
                            "functionAppScaleLimit": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "linuxFxVersion": {
                              "type": "string",
                              "defaultValue": "[if(parameters('useDocker'), format('DOCKER|{0}', parameters('dockerFullImageName')), parameters('runtimeNameAndVersion'))]"
                            },
                            "minimumElasticInstanceCount": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "numberOfWorkers": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "scmDoBuildDuringDeployment": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "use32BitWorkerProcess": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "ftpsState": {
                              "type": "string",
                              "defaultValue": "FtpsOnly"
                            },
                            "healthCheckPath": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                              "properties": {
                                "allow": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                              "properties": {
                                "allow": false
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites",
                              "apiVersion": "2022-03-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "serverFarmId": "[parameters('appServicePlanId')]",
                                "siteConfig": {
                                  "linuxFxVersion": "[parameters('linuxFxVersion')]",
                                  "alwaysOn": "[parameters('alwaysOn')]",
                                  "ftpsState": "[parameters('ftpsState')]",
                                  "minTlsVersion": "1.2",
                                  "appCommandLine": "[parameters('appCommandLine')]",
                                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                                  "healthCheckPath": "[parameters('healthCheckPath')]",
                                  "cors": {
                                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                                  }
                                },
                                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                                "httpsOnly": true
                              },
                              "identity": {
                                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                              }
                            },
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                              "properties": {
                                "applicationLogs": {
                                  "fileSystem": {
                                    "level": "Verbose"
                                  }
                                },
                                "detailedErrorMessages": {
                                  "enabled": true
                                },
                                "failedRequestsTracing": {
                                  "enabled": true
                                },
                                "httpLogs": {
                                  "fileSystem": {
                                    "enabled": true,
                                    "retentionInDays": 1,
                                    "retentionInMb": 35
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                                "[resourceId('Microsoft.Resources/deployments', format('{0}-appSettings', parameters('name')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-appSettings', parameters('name'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "name": {
                                    "value": "[parameters('name')]"
                                  },
                                  "appSettings": {
                                    "value": "[union(parameters('appSettings'), createObject('APPINSIGHTS_ENABLED', string(not(empty(parameters('applicationInsightsName')))), 'SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPINSIGHTS_INSTRUMENTATIONKEY', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.26.170.59819",
                                      "templateHash": "15901877046756643519"
                                    },
                                    "description": "Updates app settings for an Azure App Service."
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string",
                                      "metadata": {
                                        "description": "The name of the app service resource within the current resource group scope"
                                      }
                                    },
                                    "appSettings": {
                                      "type": "secureObject",
                                      "metadata": {
                                        "description": "The app settings to be applied to the app service"
                                      }
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Web/sites/config",
                                      "apiVersion": "2022-03-01",
                                      "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                                      "properties": "[parameters('appSettings')]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2022-09-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2022-09-01').outputs.uri.value]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "openai-role-function-contributor",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "search-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-blob-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[equals(parameters('authType'), 'rbac')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "storage-queue-role-function",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  },
                  "roleDefinitionId": {
                    "value": "974c5e8b-45b9-4653-ba55-5f855dd0fb88"
                  },
                  "principalType": {
                    "value": "ServicePrincipal"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "2390256577307700589"
                    },
                    "description": "Creates a role assignment for a service principal."
                  },
                  "parameters": {
                    "principalId": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "Device",
                        "ForeignGroup",
                        "Group",
                        "ServicePrincipal",
                        "User"
                      ]
                    },
                    "roleDefinitionId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "principalType": "[parameters('principalType')]",
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            },
            {
              "condition": "[parameters('useKeyVault')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "function-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.170.59819",
                      "templateHash": "7922086847377910894"
                    },
                    "description": "Assigns an Azure Key Vault access policy."
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "add"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('name'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name')))]"
              ]
            }
          ],
          "outputs": {
            "FUNCTION_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
            },
            "functionName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('hostingPlanName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureOpenAIResourceName'))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('speechServiceName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('formRecognizerName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('formRecognizerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "kind": {
            "value": "FormRecognizer"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "10580067567296932781"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "managedIdentity": {
              "type": "bool",
              "defaultValue": false
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]",
              "identity": {
                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
              }
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId, '')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('contentSafetyName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('contentSafetyName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "kind": {
            "value": "ContentSafety"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "10580067567296932781"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "managedIdentity": {
              "type": "bool",
              "defaultValue": false
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]",
              "identity": {
                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
              }
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 20))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01', 'full').identity.principalId, '')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('eventGridSystemTopicName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('eventGridSystemTopicName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName')), '2022-09-01').outputs.id.value]"
          },
          "queueName": {
            "value": "[variables('queueName')]"
          },
          "blobContainerName": {
            "value": "[variables('blobContainerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "17903656266919316099"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountId": {
              "type": "string"
            },
            "queueName": {
              "type": "string"
            },
            "blobContainerName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.EventGrid/systemTopics",
              "apiVersion": "2021-12-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "source": "[parameters('storageAccountId')]",
                "topicType": "Microsoft.Storage.StorageAccounts"
              }
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2021-12-01",
              "name": "[format('{0}/{1}', parameters('name'), 'BlobEvents')]",
              "properties": {
                "destination": {
                  "endpointType": "StorageQueue",
                  "properties": {
                    "queueMessageTimeToLiveInSeconds": -1,
                    "queueName": "[parameters('queueName')]",
                    "resourceId": "[parameters('storageAccountId')]"
                  }
                },
                "filter": {
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated",
                    "Microsoft.Storage.BlobDeleted"
                  ],
                  "enableAdvancedFilteringOnArrays": true,
                  "subjectBeginsWith": "[format('/blobServices/default/containers/{0}/blobs/', parameters('blobContainerName'))]"
                },
                "labels": [],
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                  "maxDeliveryAttempts": 30,
                  "eventTimeToLiveInMinutes": 1440
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": {
              "name": "Standard_GRS"
            }
          },
          "containers": {
            "value": [
              {
                "name": "[variables('blobContainerName')]",
                "publicAccess": "None"
              },
              {
                "name": "config",
                "publicAccess": "None"
              }
            ]
          },
          "queues": {
            "value": [
              {
                "name": "doc-processing"
              },
              {
                "name": "doc-processing-poison"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "246951497570111474"
            },
            "description": "Creates an Azure storage account."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "accessTier": {
              "type": "string",
              "defaultValue": "Hot",
              "allowedValues": [
                "Cool",
                "Hot",
                "Premium"
              ]
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "allowCrossTenantReplication": {
              "type": "bool",
              "defaultValue": true
            },
            "allowSharedKeyAccess": {
              "type": "bool",
              "defaultValue": true
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "defaultToOAuthAuthentication": {
              "type": "bool",
              "defaultValue": false
            },
            "deleteRetentionPolicy": {
              "type": "object",
              "defaultValue": {}
            },
            "dnsEndpointType": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "AzureDnsZone",
                "Standard"
              ]
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2"
            },
            "minimumTlsVersion": {
              "type": "string",
              "defaultValue": "TLS1_2"
            },
            "queues": {
              "type": "array",
              "defaultValue": []
            },
            "supportsHttpsTrafficOnly": {
              "type": "bool",
              "defaultValue": true
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": {
                "bypass": "AzureServices",
                "defaultAction": "Allow"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard_LRS"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "container",
                "count": "[length(parameters('containers'))]"
              },
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
              "properties": {
                "publicAccess": "[if(contains(parameters('containers')[copyIndex()], 'publicAccess'), parameters('containers')[copyIndex()].publicAccess, 'None')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
              ]
            },
            {
              "copy": {
                "name": "queue",
                "count": "[length(parameters('queues'))]"
              },
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('queues')[copyIndex()].name)]",
              "properties": {
                "metadata": {}
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('name'), 'default')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "deleteRetentionPolicy": "[parameters('deleteRetentionPolicy')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('queues')))]",
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "accessTier": "[parameters('accessTier')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "allowCrossTenantReplication": "[parameters('allowCrossTenantReplication')]",
                "allowSharedKeyAccess": "[parameters('allowSharedKeyAccess')]",
                "defaultToOAuthAuthentication": "[parameters('defaultToOAuthAuthentication')]",
                "dnsEndpointType": "[parameters('dnsEndpointType')]",
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "networkAcls": "[parameters('networkAcls')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').primaryEndpoints]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('authType'), 'rbac')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storage-role-user",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "ba92f5b4-2d11-453d-a403-e96b0029c9fe"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2390256577307700589"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('authType'), 'rbac')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-role-user",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "a97b65f3-24c7-4388-baec-2e87135dc908"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2390256577307700589"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('authType'), 'rbac')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai-role-user-contributor",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2390256577307700589"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('authType'), 'rbac')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "search-role-user",
      "resourceGroup": "[variables('rgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[parameters('principalId')]"
          },
          "roleDefinitionId": {
            "value": "8ebe5a00-799e-43f5-93ac-243d3dce84a7"
          },
          "principalType": {
            "value": "User"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2390256577307700589"
            },
            "description": "Creates a role assignment for a service principal."
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal",
              "allowedValues": [
                "Device",
                "ForeignGroup",
                "Group",
                "ServicePrincipal",
                "User"
              ]
            },
            "roleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, resourceGroup().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    }
  ],
  "outputs": {
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
    },
    "APPINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
    },
    "APPINSIGHTS_INSTRUMENTATIONKEY": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'monitoring'), '2022-09-01').outputs.applicationInsightsInstrumentationKey.value]"
    },
    "AZURE_BLOB_CONTAINER_NAME": {
      "type": "string",
      "value": "[variables('blobContainerName')]"
    },
    "AZURE_BLOB_ACCOUNT_NAME": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "AZURE_BLOB_ACCOUNT_KEY": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.STORAGE_ACCOUNT_KEY_NAME.value, '')]"
    },
    "AZURE_CONTENT_SAFETY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('contentSafetyName')), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_CONTENT_SAFETY_KEY": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.CONTENT_SAFETY_KEY_NAME.value, '')]"
    },
    "AZURE_FORM_RECOGNIZER_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('formRecognizerName')), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_FORM_RECOGNIZER_KEY": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.FORM_RECOGNIZER_KEY_NAME.value, '')]"
    },
    "AZURE_KEY_VAULT_ENDPOINT": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.endpoint.value, '')]"
    },
    "AZURE_KEY_VAULT_NAME": {
      "type": "string",
      "value": "[if(or(parameters('useKeyVault'), equals(parameters('authType'), 'rbac')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.name.value, '')]"
    },
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_OPENAI_MODEL_NAME": {
      "type": "string",
      "value": "[parameters('azureOpenAIModelName')]"
    },
    "AZURE_OPENAI_STREAM": {
      "type": "string",
      "value": "[parameters('azureOpenAIStream')]"
    },
    "AZURE_OPENAI_SYSTEM_MESSAGE": {
      "type": "string",
      "value": "[parameters('azureOpenAISystemMessage')]"
    },
    "AZURE_OPENAI_STOP_SEQUENCE": {
      "type": "string",
      "value": "[parameters('azureOpenAIStopSequence')]"
    },
    "AZURE_OPENAI_MAX_TOKENS": {
      "type": "string",
      "value": "[parameters('azureOpenAIMaxTokens')]"
    },
    "AZURE_OPENAI_TOP_P": {
      "type": "string",
      "value": "[parameters('azureOpenAITopP')]"
    },
    "AZURE_OPENAI_TEMPERATURE": {
      "type": "string",
      "value": "[parameters('azureOpenAITemperature')]"
    },
    "AZURE_OPENAI_API_VERSION": {
      "type": "string",
      "value": "[parameters('azureOpenAIApiVersion')]"
    },
    "AZURE_OPENAI_RESOURCE": {
      "type": "string",
      "value": "[parameters('azureOpenAIResourceName')]"
    },
    "AZURE_OPENAI_EMBEDDING_MODEL": {
      "type": "string",
      "value": "[parameters('azureOpenAIEmbeddingModel')]"
    },
    "AZURE_OPENAI_MODEL": {
      "type": "string",
      "value": "[parameters('azureOpenAIModel')]"
    },
    "AZURE_OPENAI_API_KEY": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.OPENAI_KEY_NAME.value, '')]"
    },
    "AZURE_SEARCH_KEY": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SEARCH_KEY_NAME.value, '')]"
    },
    "AZURE_SEARCH_SERVICE": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('azureAISearchName')), '2022-09-01').outputs.endpoint.value]"
    },
    "AZURE_SEARCH_USE_SEMANTIC_SEARCH": {
      "type": "string",
      "value": "[parameters('azureSearchUseSemanticSearch')]"
    },
    "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG": {
      "type": "string",
      "value": "[parameters('azureSearchSemanticSearchConfig')]"
    },
    "AZURE_SEARCH_INDEX_IS_PRECHUNKED": {
      "type": "string",
      "value": "[parameters('azureSearchIndexIsPrechunked')]"
    },
    "AZURE_SEARCH_TOP_K": {
      "type": "string",
      "value": "[parameters('azureSearchTopK')]"
    },
    "AZURE_SEARCH_ENABLE_IN_DOMAIN": {
      "type": "string",
      "value": "[parameters('azureSearchEnableInDomain')]"
    },
    "AZURE_SEARCH_CONTENT_COLUMNS": {
      "type": "string",
      "value": "[parameters('azureSearchContentColumns')]"
    },
    "AZURE_SEARCH_FILENAME_COLUMN": {
      "type": "string",
      "value": "[parameters('azureSearchFilenameColumn')]"
    },
    "AZURE_SEARCH_FILTER": {
      "type": "string",
      "value": "[parameters('azureSearchFilter')]"
    },
    "AZURE_SEARCH_TITLE_COLUMN": {
      "type": "string",
      "value": "[parameters('azureSearchTitleColumn')]"
    },
    "AZURE_SEARCH_URL_COLUMN": {
      "type": "string",
      "value": "[parameters('azureSearchUrlColumn')]"
    },
    "AZURE_SEARCH_USE_INTEGRATED_VECTORIZATION": {
      "type": "bool",
      "value": "[parameters('azureSearchUseIntegratedVectorization')]"
    },
    "AZURE_SEARCH_INDEX": {
      "type": "string",
      "value": "[parameters('azureSearchIndex')]"
    },
    "AZURE_SPEECH_SERVICE_REGION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_SPEECH_SERVICE_KEY": {
      "type": "string",
      "value": "[if(parameters('useKeyVault'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', 'storekeys'), '2022-09-01').outputs.SPEECH_KEY_NAME.value, '')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "DOCUMENT_PROCESSING_QUEUE_NAME": {
      "type": "string",
      "value": "[variables('queueName')]"
    },
    "ORCHESTRATION_STRATEGY": {
      "type": "string",
      "value": "[parameters('orchestrationStrategy')]"
    },
    "USE_KEY_VAULT": {
      "type": "bool",
      "value": "[parameters('useKeyVault')]"
    },
    "AZURE_APP_SERVICE_HOSTING_MODEL": {
      "type": "string",
      "value": "[parameters('hostingModel')]"
    },
    "FRONTEND_WEBSITE_NAME": {
      "type": "string",
      "value": "[if(equals(parameters('hostingModel'), 'code'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('websiteName')), '2022-09-01').outputs.FRONTEND_API_URI.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('websiteName'))), '2022-09-01').outputs.FRONTEND_API_URI.value)]"
    },
    "ADMIN_WEBSITE_NAME": {
      "type": "string",
      "value": "[if(equals(parameters('hostingModel'), 'code'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', parameters('adminWebsiteName')), '2022-09-01').outputs.WEBSITE_ADMIN_URI.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('rgName')), 'Microsoft.Resources/deployments', format('{0}-docker', parameters('adminWebsiteName'))), '2022-09-01').outputs.WEBSITE_ADMIN_URI.value)]"
    },
    "LOGLEVEL": {
      "type": "string",
      "value": "[parameters('logLevel')]"
    }
  }
}